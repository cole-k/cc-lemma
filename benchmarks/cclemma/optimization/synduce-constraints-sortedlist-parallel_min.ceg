(
  (data Bool (True False))
  (:: True Bool)
  (:: False Bool)
  (data Nat (Zero Succ))
  (:: Zero Nat)
  (:: Succ (-> (Nat) Nat))
  (data List (Elt Cons))
  (:: Elt (-> (Nat) List))
  (:: Cons (-> (Nat List) List))
  (data CList (Single Concat))
  (:: Single (-> (Nat) CList))
  (:: Concat (-> (CList CList) CList))
  (:: tf1 (-> (List List) List))
  (let tf1 (?tv5 (Elt ?tv6)) (Cons ?tv6 ?tv5))
  (let tf1 (?tv5 (Cons ?tv7 ?tv8)) (Cons ?tv7 (tf0 ?tv8 ?tv5)))
  (:: tf0 (-> (List List) List))
  (let tf0 (?tv2 ?tv3) (tf1 ?tv3 ?tv2))
  (:: cat (-> (List List) List))
  (let cat (?tv0 ?tv1) (tf0 ?tv0 ?tv1))
  (:: tf3 (-> (CList) List))
  (let tf3 ((Single ?tv12)) (Elt ?tv12))
  (let tf3 ((Concat ?tv13 ?tv14)) (cat (tf2 ?tv13) (tf2 ?tv14)))
  (:: tf2 (-> (CList) List))
  (let tf2 (?tv10) (tf3 ?tv10))
  (:: repr (-> (CList) List))
  (let repr (?tv9) (tf2 ?tv9))
  (:: lq (-> (Nat Nat) Bool))
  (let lq (Zero (Succ ?x)) True)
  (let lq (?x Zero) False)
  (let lq ((Succ ?x) (Succ ?y)) (lq ?x ?y))
  (:: ite2 (-> (Bool Nat Nat) Nat))
  (let ite2 (True ?x ?y) ?x)
  (let ite2 (False ?x ?y) ?y)
  (:: max (-> (Nat Nat) Nat))
  (let max (?tv15 ?tv16) (ite2 (lq ?tv15 ?tv16) ?tv16 ?tv15))
  (:: tf5 (-> (CList) Nat))
  (let tf5 ((Single ?tv20)) ?tv20)
  (let tf5 ((Concat ?tv21 ?tv22)) (max (tf4 ?tv21) (tf4 ?tv22)))
  (:: tf4 (-> (CList) Nat))
  (let tf4 (?tv18) (tf5 ?tv18))
  (:: lmax (-> (CList) Nat))
  (let lmax (?tv17) (tf4 ?tv17))
  (:: min (-> (Nat Nat) Nat))
  (let min (?tv23 ?tv24) (ite2 (lq ?tv23 ?tv24) ?tv23 ?tv24))
  (:: tf7 (-> (CList) Nat))
  (let tf7 ((Single ?tv28)) ?tv28)
  (let tf7 ((Concat ?tv29 ?tv30)) (min (tf6 ?tv29) (tf6 ?tv30)))
  (:: tf6 (-> (CList) Nat))
  (let tf6 (?tv26) (tf7 ?tv26))
  (:: lmin (-> (CList) Nat))
  (let lmin (?tv25) (tf6 ?tv25))
  (:: and (-> (Bool Bool) Bool))
  (let and (False ?x) False)
  (let and (?x False) False)
  (let and (True True) True)
  (:: tf9 (-> (CList) Bool))
  (let tf9 ((Single ?tv34)) True)
  (let tf9 ((Concat ?tv35 ?tv36)) (and (lq (lmax ?tv35) (lmin ?tv36)) (and (tf8 ?tv35) (tf8 ?tv36))))
  (:: tf8 (-> (CList) Bool))
  (let tf8 (?tv32) (tf9 ?tv32))
  (:: ispart (-> (CList) Bool))
  (let ispart (?tv31) (tf8 ?tv31))
  (:: tf11 (-> (List) Nat))
  (let tf11 ((Elt ?tv40)) ?tv40)
  (let tf11 ((Cons ?tv41 ?tv42)) (min ?tv41 (tf10 ?tv42)))
  (:: tf10 (-> (List) Nat))
  (let tf10 (?tv38) (tf11 ?tv38))
  (:: spec (-> (List) Nat))
  (let spec (?tv37) (tf10 ?tv37))
  (:: tf13 (-> (CList CList) CList))
  (let tf13 (?tv46 (Single ?tv47)) ?tv46)
  (let tf13 (?tv46 (Concat ?tv48 ?tv49)) (Concat (tf12 ?tv48) ?tv49))
  (:: tf12 (-> (CList) CList))
  (let tf12 (?tv44) (tf13 ?tv44 ?tv44))
  (:: target (-> (CList) CList))
  (let target (?tv43) (tf12 ?tv43))
  (:: main (-> (CList) Nat))
  (let main (?tv50) (ite2 (ispart ?tv50) (spec (repr (target ?tv50))) Zero))
  (:: tf15 (-> (CList) Nat))
  (let tf15 ((Single ?tv54)) ?tv54)
  (let tf15 ((Concat ?tv55 ?tv56)) (tf14 ?tv55))
  (:: tf14 (-> (CList) Nat))
  (let tf14 (?tv52) (tf15 ?tv52))
  (:: targetNew (-> (CList) Nat))
  (let targetNew (?tv51) (tf14 ?tv51))
  (:: mainNew (-> (CList) Nat))
  (let mainNew (?tv57) (ite2 (ispart ?tv57) (targetNew ?tv57) Zero))
  (=== optimize (inp0) (CList) (main inp0) (mainNew inp0))
)
