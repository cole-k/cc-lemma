(
  (data Bool (True False))
  (:: True Bool)
  (:: False Bool)
  (data Unit (Null))
  (:: Null Unit)
  (data Nat (Zero Succ))
  (:: Zero Nat)
  (:: Succ (-> (Nat) Nat))
  (data BTree (Empty Node))
  (:: Empty (-> (Unit) BTree))
  (:: Node (-> (Nat BTree BTree) BTree))
  (data Zipper (Top Left Right))
  (:: Top (-> (Unit) Zipper))
  (:: Left (-> (Nat BTree Zipper) Zipper))
  (:: Right (-> (Nat BTree Zipper) Zipper))
  (:: lq (-> (Nat Nat) Bool))
  (let lq (Zero (Succ ?x)) True)
  (let lq (?x Zero) False)
  (let lq ((Succ ?x) (Succ ?y)) (lq ?x ?y))
  (:: ite2 (-> (Bool Nat Nat) Nat))
  (let ite2 (True ?x ?y) ?x)
  (let ite2 (False ?x ?y) ?y)
  (:: max (-> (Nat Nat) Nat))
  (let max (?tv0 ?tv1) (ite2 (lq ?tv0 ?tv1) ?tv1 ?tv0))
  (:: plus (-> (Nat Nat) Nat))
  (let plus (Zero ?x) ?x)
  (let plus ((Succ ?x) ?y) (Succ (plus ?x ?y)))
  (:: tf1 (-> (BTree) Nat))
  (let tf1 ((Empty ?tv5)) Zero)
  (let tf1 ((Node ?tv6 ?tv7 ?tv8)) (plus ?tv6 (max (tf0 ?tv7) (tf0 ?tv8))))
  (:: tf0 (-> (BTree) Nat))
  (let tf0 (?tv3) (tf1 ?tv3))
  (:: mpath (-> (BTree) Nat))
  (let mpath (?tv2) (tf0 ?tv2))
  (:: tf3 (-> (Zipper) BTree))
  (let tf3 ((Top ?tv12)) (Empty Null))
  (let tf3 ((Left ?tv13 ?tv14 ?tv15)) (Node ?tv13 ?tv14 (tf2 ?tv15)))
  (let tf3 ((Right ?tv16 ?tv17 ?tv18)) (Node ?tv16 (tf2 ?tv18) ?tv17))
  (:: tf2 (-> (Zipper) BTree))
  (let tf2 (?tv10) (tf3 ?tv10))
  (:: repr (-> (Zipper) BTree))
  (let repr (?tv9) (tf2 ?tv9))
  (:: tf5 (-> (BTree) BTree))
  (let tf5 ((Empty ?tv22)) (Empty Null))
  (let tf5 ((Node ?tv23 ?tv24 ?tv25)) (Node ?tv23 (tf4 ?tv24) (tf4 ?tv25)))
  (:: tf4 (-> (BTree) BTree))
  (let tf4 (?tv20) (tf5 ?tv20))
  (:: treerec (-> (BTree) BTree))
  (let treerec (?tv19) (tf4 ?tv19))
  (:: tf7 (-> (Zipper) Zipper))
  (let tf7 ((Top ?tv29)) (Top Null))
  (let tf7 ((Left ?tv30 ?tv31 ?tv32)) (Left ?tv30 (treerec ?tv31) (tf6 ?tv32)))
  (let tf7 ((Right ?tv33 ?tv34 ?tv35)) (Right ?tv33 (treerec ?tv34) (tf6 ?tv35)))
  (:: tf6 (-> (Zipper) Zipper))
  (let tf6 (?tv27) (tf7 ?tv27))
  (:: ziprec (-> (Zipper) Zipper))
  (let ziprec (?tv26) (tf6 ?tv26))
  (:: main (-> (Zipper) Nat))
  (let main (?tv36) (mpath (repr (ziprec ?tv36))))
  (:: tf9 (-> (BTree) Nat))
  (let tf9 ((Empty ?tv40)) Zero)
  (let tf9 ((Node ?tv41 ?tv42 ?tv43)) (plus ?tv41 (max (tf8 ?tv43) (tf8 ?tv42))))
  (:: tf8 (-> (BTree) Nat))
  (let tf8 (?tv38) (tf9 ?tv38))
  (:: treerecNew (-> (BTree) Nat))
  (let treerecNew (?tv37) (tf8 ?tv37))
  (:: tf11 (-> (Zipper) Nat))
  (let tf11 ((Top ?tv47)) Zero)
  (let tf11 ((Left ?tv48 ?tv49 ?tv50)) (plus ?tv48 (max (tf10 ?tv50) (treerecNew ?tv49))))
  (let tf11 ((Right ?tv51 ?tv52 ?tv53)) (plus ?tv51 (max (tf10 ?tv53) (treerecNew ?tv52))))
  (:: tf10 (-> (Zipper) Nat))
  (let tf10 (?tv45) (tf11 ?tv45))
  (:: ziprecNew (-> (Zipper) Nat))
  (let ziprecNew (?tv44) (tf10 ?tv44))
  (:: mainNew (-> (Zipper) Nat))
  (let mainNew (?tv54) (ziprecNew ?tv54))
  (=== optimize (inp0) (Zipper) (main inp0) (mainNew inp0))
)
