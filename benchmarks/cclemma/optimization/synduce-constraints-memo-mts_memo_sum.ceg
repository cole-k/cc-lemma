(
  (data Bool (True False))
  (:: True Bool)
  (:: False Bool)
  (data Nat (Zero Succ))
  (:: Zero Nat)
  (:: Succ (-> (Nat) Nat))
  (data List (Elt Cons))
  (:: Elt (-> (Nat) List))
  (:: Cons (-> (Nat List) List))
  (data MList (Ielt Icons))
  (:: Ielt (-> (Nat) MList))
  (:: Icons (-> (Nat Nat MList) MList))
  (:: tf1 (-> (MList) List))
  (let tf1 ((Ielt ?tv3)) (Elt ?tv3))
  (let tf1 ((Icons ?tv4 ?tv5 ?tv6)) (Cons ?tv4 (tf0 ?tv6)))
  (:: tf0 (-> (MList) List))
  (let tf0 (?tv1) (tf1 ?tv1))
  (:: repr (-> (MList) List))
  (let repr (?tv0) (tf0 ?tv0))
  (:: plus (-> (Nat Nat) Nat))
  (let plus (Zero ?x) ?x)
  (let plus ((Succ ?x) ?y) (Succ (plus ?x ?y)))
  (:: tf3 (-> (List) Nat))
  (let tf3 ((Elt ?tv10)) ?tv10)
  (let tf3 ((Cons ?tv11 ?tv12)) (plus ?tv11 (tf2 ?tv12)))
  (:: tf2 (-> (List) Nat))
  (let tf2 (?tv8) (tf3 ?tv8))
  (:: sum (-> (List) Nat))
  (let sum (?tv7) (tf2 ?tv7))
  (:: and (-> (Bool Bool) Bool))
  (let and (False ?x) False)
  (let and (?x False) False)
  (let and (True True) True)
  (:: nateq (-> (Nat Nat) Bool))
  (let nateq (Zero Zero) True)
  (let nateq (Zero (Succ ?x)) False)
  (let nateq ((Succ ?x) Zero) False)
  (let nateq ((Succ ?x) (Succ ?y)) (nateq ?x ?y))
  (:: tf5 (-> (MList MList) Bool))
  (let tf5 (?tv16 (Ielt ?tv17)) True)
  (let tf5 (?tv16 (Icons ?tv18 ?tv19 ?tv20)) (and (nateq ?tv19 (sum (repr ?tv16))) (tf4 ?tv20)))
  (:: tf4 (-> (MList) Bool))
  (let tf4 (?tv14) (tf5 ?tv14 ?tv14))
  (:: ismemo (-> (MList) Bool))
  (let ismemo (?tv13) (tf4 ?tv13))
  (:: lq (-> (Nat Nat) Bool))
  (let lq (Zero (Succ ?x)) True)
  (let lq (?x Zero) False)
  (let lq ((Succ ?x) (Succ ?y)) (lq ?x ?y))
  (:: ite2 (-> (Bool Nat Nat) Nat))
  (let ite2 (True ?x ?y) ?x)
  (let ite2 (False ?x ?y) ?y)
  (:: max (-> (Nat Nat) Nat))
  (let max (?tv21 ?tv22) (ite2 (lq ?tv21 ?tv22) ?tv22 ?tv21))
  (:: tf7 (-> (List List) Nat))
  (let tf7 (?tv25 (Elt ?tv27)) ?tv27)
  (let tf7 (?tv25 (Cons ?tv28 ?tv29)) (max (tf6 ?tv29) (sum ?tv25)))
  (:: tf6 (-> (List) Nat))
  (let tf6 (?tv24) (tf7 ?tv24 ?tv24))
  (:: spec (-> (List) Nat))
  (let spec (?tv23) (tf6 ?tv23))
  (:: tf9 (-> (MList MList) MList))
  (let tf9 (?tv33 (Ielt ?tv34)) ?tv33)
  (let tf9 (?tv33 (Icons ?tv35 ?tv36 ?tv37)) (Icons ?tv35 ?tv36 (tf8 ?tv37)))
  (:: tf8 (-> (MList) MList))
  (let tf8 (?tv31) (tf9 ?tv31 ?tv31))
  (:: target (-> (MList) MList))
  (let target (?tv30) (tf8 ?tv30))
  (:: main (-> (MList) Nat))
  (let main (?tv38) (ite2 (ismemo ?tv38) (spec (repr (target ?tv38))) Zero))
  (:: tf11 (-> (MList) Nat))
  (let tf11 ((Ielt ?tv42)) ?tv42)
  (let tf11 ((Icons ?tv43 ?tv44 ?tv45)) (ite2 (lq (tf10 ?tv45) ?tv44) ?tv44 (tf10 ?tv45)))
  (:: tf10 (-> (MList) Nat))
  (let tf10 (?tv40) (tf11 ?tv40))
  (:: targetNew (-> (MList) Nat))
  (let targetNew (?tv39) (tf10 ?tv39))
  (:: mainNew (-> (MList) Nat))
  (let mainNew (?tv46) (ite2 (ismemo ?tv46) (targetNew ?tv46) Zero))
  (=== optimize (inp0) (MList) (main inp0) (mainNew inp0))
)
