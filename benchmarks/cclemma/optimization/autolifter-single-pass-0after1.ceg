(
  (data Bool (True False))
  (:: True Bool)
  (:: False Bool)
  (data Unit (Null))
  (:: Null Unit)
  (data List (Nil Cons))
  (:: Nil (-> (Unit) List))
  (:: Cons (-> (Bool List) List))
  (:: tf1 (-> (List List) List))
  (let tf1 (?tv4 (Nil ?tv5)) ?tv4)
  (let tf1 (?tv4 (Cons ?tv6 ?tv7)) (Cons ?tv6 (tf0 ?tv7)))
  (:: tf0 (-> (List) List))
  (let tf0 (?tv2) (tf1 ?tv2 ?tv2))
  (:: tf2 (-> (List) Bool))
  (let tf2 (?tv9) (zafter1 (tf0 ?tv9)))
  (:: singlepass (-> (List) Bool))
  (let singlepass (?tv1) (tf2 ?tv1))
  (:: and (-> (Bool Bool) Bool))
  (let and (False ?x) False)
  (let and (?x False) False)
  (let and (True True) True)
  (:: not (-> (Bool) Bool))
  (let not (True) False)
  (let not (False) True)
  (:: or (-> (Bool Bool) Bool))
  (let or (True ?x) True)
  (let or (?x True) True)
  (let or (False False) False)
  (:: ite1 (-> (Bool Bool) Bool))
  (let ite1 (True ?y) True)
  (let ite1 (False ?y) ?y)
  (:: tf4 (-> (Bool List) Bool))
  (let tf4 (?tv14 (Nil ?tv15)) False)
  (let tf4 (?tv14 (Cons ?tv16 ?tv17)) (ite1 (and ?tv14 (not ?tv16)) (tf3 (or ?tv14 ?tv16) ?tv17)))
  (:: tf3 (-> (Bool List) Bool))
  (let tf3 (?tv11 ?tv12) (tf4 ?tv11 ?tv12))
  (:: zafter1 (-> (List) Bool))
  (let zafter1 (?tv10) (tf3 False ?tv10))
  (:: main (-> (List) Bool))
  (let main (?tv18) (singlepass ?tv18))
  (data Tuple2 (MakeTuple2))
  (:: MakeTuple2 (-> (Bool Bool) Tuple2))
  (:: snd2 (-> (Tuple2) Bool))
  (let snd2 ((MakeTuple2 ?x0 ?x1)) ?x1)
  (:: fst2 (-> (Tuple2) Bool))
  (let fst2 ((MakeTuple2 ?x0 ?x1)) ?x0)
  (:: tf6 (-> (List) Tuple2))
  (let tf6 ((Nil ?tv23)) (MakeTuple2 False True))
  (let tf6 ((Cons ?tv24 ?tv25)) (MakeTuple2 (or (and ?tv24 (not (snd2 (tf5 ?tv25)))) (fst2 (tf5 ?tv25))) (and ?tv24 (snd2 (tf5 ?tv25)))))
  (:: tf5 (-> (List) Tuple2))
  (let tf5 (?tv21) (tf6 ?tv21))
  (:: tf7 (-> (List) Bool))
  (let tf7 (?tv26) (fst2 (tf5 ?tv26)))
  (:: singlepassNew (-> (List) Bool))
  (let singlepassNew (?tv20) (tf7 ?tv20))
  (:: mainNew (-> (List) Bool))
  (let mainNew (?tv27) (singlepassNew ?tv27))
  (=== optimize (inp0) (List) (main inp0) (mainNew inp0))
)
