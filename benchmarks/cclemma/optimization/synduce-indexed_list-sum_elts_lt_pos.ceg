(
  (data Bool (True False))
  (:: True Bool)
  (:: False Bool)
  (data Unit (Null))
  (:: Null Unit)
  (data Nat (Zero Succ))
  (:: Zero Nat)
  (:: Succ (-> (Nat) Nat))
  (data List (Nil Cons))
  (:: Nil (-> (Unit) List))
  (:: Cons (-> (Nat List) List))
  (data IndexedList (Inil Icons))
  (:: Inil (-> (Unit) IndexedList))
  (:: Icons (-> (Nat Nat IndexedList) IndexedList))
  (:: plus (-> (Nat Nat) Nat))
  (let plus (Zero ?x) ?x)
  (let plus ((Succ ?x) ?y) (Succ (plus ?x ?y)))
  (:: tf1 (-> (List) Nat))
  (let tf1 ((Nil ?tv3)) Zero)
  (let tf1 ((Cons ?tv4 ?tv5)) (plus (Succ Zero) (tf0 ?tv5)))
  (:: tf0 (-> (List) Nat))
  (let tf0 (?tv1) (tf1 ?tv1))
  (:: length (-> (List) Nat))
  (let length (?tv0) (tf0 ?tv0))
  (:: tf3 (-> (List) IndexedList))
  (let tf3 ((Nil ?tv9)) (Inil Null))
  (let tf3 ((Cons ?tv10 ?tv11)) (Icons ?tv10 (length ?tv11) (tf2 ?tv11)))
  (:: tf2 (-> (List) IndexedList))
  (let tf2 (?tv7) (tf3 ?tv7))
  (:: repr (-> (List) IndexedList))
  (let repr (?tv6) (tf2 ?tv6))
  (:: gq (-> (Nat Nat) Bool))
  (let gq (Zero ?x) False)
  (let gq ((Succ ?x) Zero) True)
  (let gq ((Succ ?x) (Succ ?y)) (gq ?x ?y))
  (:: ite2 (-> (Bool Nat Nat) Nat))
  (let ite2 (True ?x ?y) ?x)
  (let ite2 (False ?x ?y) ?y)
  (:: tf5 (-> (IndexedList) Nat))
  (let tf5 ((Inil ?tv15)) Zero)
  (let tf5 ((Icons ?tv16 ?tv17 ?tv18)) (ite2 (gq ?tv16 ?tv17) (plus ?tv16 (tf4 ?tv18)) (tf4 ?tv18)))
  (:: tf4 (-> (IndexedList) Nat))
  (let tf4 (?tv13) (tf5 ?tv13))
  (:: spec (-> (IndexedList) Nat))
  (let spec (?tv12) (tf4 ?tv12))
  (:: main (-> (List) Nat))
  (let main (?tv19) (spec (repr ?tv19)))
  (:: lq (-> (Nat Nat) Bool))
  (let lq (Zero (Succ ?x)) True)
  (let lq (?x Zero) False)
  (let lq ((Succ ?x) (Succ ?y)) (lq ?x ?y))
  (:: tf7 (-> (List) Nat))
  (let tf7 ((Nil ?tv23)) Zero)
  (let tf7 ((Cons ?tv24 ?tv25)) (ite2 (lq (length ?tv25) ?tv24) (plus (tf6 ?tv25) ?tv24) (tf6 ?tv25)))
  (:: tf6 (-> (List) Nat))
  (let tf6 (?tv21) (tf7 ?tv21))
  (:: reprNew (-> (List) Nat))
  (let reprNew (?tv20) (tf6 ?tv20))
  (:: mainNew (-> (List) Nat))
  (let mainNew (?tv26) (reprNew ?tv26))
  (=== optimize (inp0) (List) (main inp0) (mainNew inp0))
)
