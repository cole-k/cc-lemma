(
  (data Bool (True False))
  (:: True Bool)
  (:: False Bool)
  (data Nat (Zero Succ))
  (:: Zero Nat)
  (:: Succ (-> (Nat) Nat))
  (data Tree (Leaf Node))
  (:: Leaf (-> (Nat) Tree))
  (:: Node (-> (Nat Tree Tree) Tree))
  (data List (Elt Cons))
  (:: Elt (-> (Nat) List))
  (:: Cons (-> (Nat List) List))
  (:: lq (-> (Nat Nat) Bool))
  (let lq (Zero (Succ ?x)) True)
  (let lq (?x Zero) False)
  (let lq ((Succ ?x) (Succ ?y)) (lq ?x ?y))
  (:: ite2 (-> (Bool Nat Nat) Nat))
  (let ite2 (True ?x ?y) ?x)
  (let ite2 (False ?x ?y) ?y)
  (:: min (-> (Nat Nat) Nat))
  (let min (?tv0 ?tv1) (ite2 (lq ?tv0 ?tv1) ?tv0 ?tv1))
  (:: max (-> (Nat Nat) Nat))
  (let max (?tv2 ?tv3) (ite2 (lq ?tv2 ?tv3) ?tv3 ?tv2))
  (:: tf1 (-> (Tree) Nat))
  (let tf1 ((Leaf ?tv7)) ?tv7)
  (let tf1 ((Node ?tv8 ?tv9 ?tv10)) (min ?tv8 (min (tf0 ?tv9) (tf0 ?tv10))))
  (:: tf0 (-> (Tree) Nat))
  (let tf0 (?tv5) (tf1 ?tv5))
  (:: tmin (-> (Tree) Nat))
  (let tmin (?tv4) (tf0 ?tv4))
  (:: tf3 (-> (Tree) Nat))
  (let tf3 ((Leaf ?tv14)) ?tv14)
  (let tf3 ((Node ?tv15 ?tv16 ?tv17)) (max ?tv15 (max (tf2 ?tv16) (tf2 ?tv17))))
  (:: tf2 (-> (Tree) Nat))
  (let tf2 (?tv12) (tf3 ?tv12))
  (:: tmax (-> (Tree) Nat))
  (let tmax (?tv11) (tf2 ?tv11))
  (:: and (-> (Bool Bool) Bool))
  (let and (False ?x) False)
  (let and (?x False) False)
  (let and (True True) True)
  (:: geq (-> (Nat Nat) Bool))
  (let geq (Zero (Succ ?x)) False)
  (let geq (?x Zero) True)
  (let geq ((Succ ?x) (Succ ?y)) (geq ?x ?y))
  (:: leq (-> (Nat Nat) Bool))
  (let leq (Zero ?x) True)
  (let leq ((Succ ?x) Zero) False)
  (let leq ((Succ ?x) (Succ ?y)) (leq ?x ?y))
  (:: tf5 (-> (Tree) Bool))
  (let tf5 ((Leaf ?tv21)) True)
  (let tf5 ((Node ?tv22 ?tv23 ?tv24)) (and (and (geq ?tv22 (tmax ?tv23)) (leq ?tv22 (tmin ?tv24))) (and (tf4 ?tv23) (tf4 ?tv24))))
  (:: tf4 (-> (Tree) Bool))
  (let tf4 (?tv19) (tf5 ?tv19))
  (:: isbst (-> (Tree) Bool))
  (let isbst (?tv18) (tf4 ?tv18))
  (:: tf7 (-> (List List) List))
  (let tf7 (?tv29 (Cons ?tv31 ?tv32)) (Cons ?tv31 (tf6 ?tv32 ?tv29)))
  (let tf7 (?tv29 (Elt ?tv33)) (Cons ?tv33 ?tv29))
  (:: tf6 (-> (List List) List))
  (let tf6 (?tv27 ?tv28) (tf7 ?tv28 ?tv27))
  (:: cat (-> (List List) List))
  (let cat (?tv25 ?tv26) (tf6 ?tv25 ?tv26))
  (:: tf9 (-> (Tree) List))
  (let tf9 ((Leaf ?tv37)) (Elt ?tv37))
  (let tf9 ((Node ?tv38 ?tv39 ?tv40)) (cat (tf8 ?tv39) (Cons ?tv38 (tf8 ?tv40))))
  (:: tf8 (-> (Tree) List))
  (let tf8 (?tv35) (tf9 ?tv35))
  (:: repr (-> (Tree) List))
  (let repr (?tv34) (tf8 ?tv34))
  (:: tf11 (-> (List) Nat))
  (let tf11 ((Elt ?tv44)) ?tv44)
  (let tf11 ((Cons ?tv45 ?tv46)) (max ?tv45 (tf10 ?tv46)))
  (:: tf10 (-> (List) Nat))
  (let tf10 (?tv42) (tf11 ?tv42))
  (:: spec (-> (List) Nat))
  (let spec (?tv41) (tf10 ?tv41))
  (:: tf13 (-> (Tree) Tree))
  (let tf13 ((Leaf ?tv50)) (Leaf ?tv50))
  (let tf13 ((Node ?tv51 ?tv52 ?tv53)) (Node ?tv51 ?tv52 (tf12 ?tv53)))
  (:: tf12 (-> (Tree) Tree))
  (let tf12 (?tv48) (tf13 ?tv48))
  (:: target (-> (Tree) Tree))
  (let target (?tv47) (tf12 ?tv47))
  (:: main (-> (Tree) Nat))
  (let main (?tv54) (ite2 (isbst ?tv54) (spec (repr (target ?tv54))) Zero))
  (:: tf15 (-> (Tree) Nat))
  (let tf15 ((Leaf ?tv58)) ?tv58)
  (let tf15 ((Node ?tv59 ?tv60 ?tv61)) (tf14 ?tv61))
  (:: tf14 (-> (Tree) Nat))
  (let tf14 (?tv56) (tf15 ?tv56))
  (:: targetNew (-> (Tree) Nat))
  (let targetNew (?tv55) (tf14 ?tv55))
  (:: mainNew (-> (Tree) Nat))
  (let mainNew (?tv62) (ite2 (isbst ?tv62) (targetNew ?tv62) Zero))
  (=== optimize (inp0) (Tree) (main inp0) (mainNew inp0))
)
