(
  (data Bool (True False))
  (:: True Bool)
  (:: False Bool)
  (data Nat (Zero Succ))
  (:: Zero Nat)
  (:: Succ (-> (Nat) Nat))
  (data Tree (Leaf Node))
  (:: Leaf (-> (Nat) Tree))
  (:: Node (-> (Nat Tree Tree) Tree))
  (data TreeMemo (Mleaf Mnode))
  (:: Mleaf (-> (Nat) TreeMemo))
  (:: Mnode (-> (Nat Nat TreeMemo TreeMemo) TreeMemo))
  (:: tf0 (-> (TreeMemo) Nat))
  (let tf0 ((Mleaf ?tv1)) (Succ Zero))
  (let tf0 ((Mnode ?tv2 ?tv3 ?tv4 ?tv5)) ?tv2)
  (:: memo (-> (TreeMemo) Nat))
  (let memo (?tv0) (tf0 ?tv0))
  (:: and (-> (Bool Bool) Bool))
  (let and (False ?x) False)
  (let and (?x False) False)
  (let and (True True) True)
  (:: nateq (-> (Nat Nat) Bool))
  (let nateq (Zero Zero) True)
  (let nateq (Zero (Succ ?x)) False)
  (let nateq ((Succ ?x) Zero) False)
  (let nateq ((Succ ?x) (Succ ?y)) (nateq ?x ?y))
  (:: plus (-> (Nat Nat) Nat))
  (let plus (Zero ?x) ?x)
  (let plus ((Succ ?x) ?y) (Succ (plus ?x ?y)))
  (:: tf2 (-> (TreeMemo) Bool))
  (let tf2 ((Mleaf ?tv9)) True)
  (let tf2 ((Mnode ?tv10 ?tv11 ?tv12 ?tv13)) (and (nateq ?tv10 (plus (Succ Zero) (plus (memo ?tv12) (memo ?tv13)))) (and (tf1 ?tv12) (tf1 ?tv13))))
  (:: tf1 (-> (TreeMemo) Bool))
  (let tf1 (?tv7) (tf2 ?tv7))
  (:: ismemo (-> (TreeMemo) Bool))
  (let ismemo (?tv6) (tf1 ?tv6))
  (:: tf4 (-> (TreeMemo) Tree))
  (let tf4 ((Mleaf ?tv17)) (Leaf ?tv17))
  (let tf4 ((Mnode ?tv18 ?tv19 ?tv20 ?tv21)) (Node ?tv19 (tf3 ?tv20) (tf3 ?tv21)))
  (:: tf3 (-> (TreeMemo) Tree))
  (let tf3 (?tv15) (tf4 ?tv15))
  (:: repr (-> (TreeMemo) Tree))
  (let repr (?tv14) (tf3 ?tv14))
  (:: tf6 (-> (TreeMemo) TreeMemo))
  (let tf6 ((Mleaf ?tv24)) (Mleaf ?tv24))
  (let tf6 ((Mnode ?tv25 ?tv26 ?tv27 ?tv28)) (Mnode ?tv25 ?tv26 ?tv27 ?tv28))
  (:: tf5 (-> (TreeMemo) TreeMemo))
  (let tf5 (?tv23) (tf6 ?tv23))
  (:: target (-> (TreeMemo) TreeMemo))
  (let target (?tv22) (tf5 ?tv22))
  (:: tf8 (-> (Tree) Nat))
  (let tf8 ((Leaf ?tv32)) (Succ Zero))
  (let tf8 ((Node ?tv33 ?tv34 ?tv35)) (plus (Succ Zero) (plus (tf7 ?tv34) (tf7 ?tv35))))
  (:: tf7 (-> (Tree) Nat))
  (let tf7 (?tv30) (tf8 ?tv30))
  (:: spec (-> (Tree) Nat))
  (let spec (?tv29) (tf7 ?tv29))
  (:: ite2 (-> (Bool Nat) Nat))
  (let ite2 (True ?x) ?x)
  (let ite2 (False ?x) Zero)
  (:: main (-> (TreeMemo) Nat))
  (let main (?tv36) (ite2 (ismemo ?tv36) (spec (repr (target ?tv36)))))
  (:: mainNew (-> (TreeMemo) Nat))
  (let mainNew (?tv37) (ite2 (ismemo ?tv37) (memo ?tv37)))
  (=== optimize (inp0) (TreeMemo) (main inp0) (mainNew inp0))
)
