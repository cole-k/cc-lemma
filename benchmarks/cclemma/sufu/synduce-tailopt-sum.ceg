(
  (data Bool (True False))
  (:: True Bool)
  (:: False Bool)
  (data Unit (Null))
  (:: Null Unit)
  (data Nat (Zero Succ))
  (:: Zero Nat)
  (:: Succ (-> (Nat) Nat))
  (data List (Nil Cons))
  (:: Nil (-> (Unit) List))
  (:: Cons (-> (Nat List) List))
  (:: plus (-> (Nat Nat) Nat))
  (let plus (Zero ?x) ?x)
  (let plus ((Succ ?x) ?y) (Succ (plus ?x ?y)))
  (:: tf1 (-> (List) Nat))
  (let tf1 ((Nil ?tv3)) Zero)
  (let tf1 ((Cons ?tv4 ?tv5)) (plus ?tv4 (tf0 ?tv5)))
  (:: tf0 (-> (List) Nat))
  (let tf0 (?tv1) (tf1 ?tv1))
  (:: spec (-> (List) Nat))
  (let spec (?tv0) (tf0 ?tv0))
  (:: tf3 (-> (Nat List) List))
  (let tf3 (?tv11 (Nil ?tv12)) (Cons ?tv11 (Nil Null)))
  (let tf3 (?tv11 (Cons ?tv13 ?tv14)) (Cons ?tv13 (tf2 ?tv14 ?tv11)))
  (:: tf2 (-> (List Nat) List))
  (let tf2 (?tv8 ?tv9) (tf3 ?tv9 ?tv8))
  (:: snoc (-> (List Nat) List))
  (let snoc (?tv6 ?tv7) (tf2 ?tv6 ?tv7))
  (:: tf5 (-> (List List) List))
  (let tf5 (?tv19 (Nil ?tv20)) ?tv19)
  (let tf5 (?tv19 (Cons ?tv21 ?tv22)) (tf4 (snoc ?tv19 ?tv21) ?tv22))
  (:: tf4 (-> (List List) List))
  (let tf4 (?tv16 ?tv17) (tf5 ?tv16 ?tv17))
  (:: repr (-> (List) List))
  (let repr (?tv15) (tf4 (Nil Null) ?tv15))
  (:: main (-> (List) Nat))
  (let main (?tv23) (spec (repr ?tv23)))
  (:: tf7 (-> (Nat List) Nat))
  (let tf7 (?tv28 (Nil ?tv29)) ?tv28)
  (let tf7 (?tv28 (Cons ?tv30 ?tv31)) (tf6 (plus ?tv28 ?tv30) ?tv31))
  (:: tf6 (-> (Nat List) Nat))
  (let tf6 (?tv25 ?tv26) (tf7 ?tv25 ?tv26))
  (:: reprNew (-> (List) Nat))
  (let reprNew (?tv24) (tf6 Zero ?tv24))
  (:: mainNew (-> (List) Nat))
  (let mainNew (?tv32) (reprNew ?tv32))
  (=== optimize (inp0) (List) (main inp0) (mainNew inp0))
)
