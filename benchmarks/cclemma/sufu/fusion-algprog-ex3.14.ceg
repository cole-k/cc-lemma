(
  (data Bool (True False))
  (:: True Bool)
  (:: False Bool)
  (data Nat (Zero Succ))
  (:: Zero Nat)
  (:: Succ (-> (Nat) Nat))
  (data Tree (Tip Bin))
  (:: Tip (-> (Nat) Tree))
  (:: Bin (-> (Tree Tree) Tree))
  (data Tuple1 (MakeTuple1))
  (:: MakeTuple1 (-> (Nat Nat) Tuple1))
  (data PTree (Ptip Pbin))
  (:: Ptip (-> (Nat Nat) PTree))
  (:: Pbin (-> (PTree PTree) PTree))
  (:: plus (-> (Nat Nat) Nat))
  (let plus (Zero ?x) ?x)
  (let plus ((Succ ?x) ?y) (Succ (plus ?x ?y)))
  (:: tf3 (-> (PTree) PTree))
  (let tf3 ((Ptip ?tv8 ?tv9)) (Ptip (plus ?tv8 (Succ Zero)) ?tv9))
  (let tf3 ((Pbin ?tv10 ?tv11)) (Pbin (tf2 ?tv10) (tf2 ?tv11)))
  (:: tf2 (-> (PTree) PTree))
  (let tf2 (?tv6) (tf3 ?tv6))
  (:: tf1 (-> (Tree) PTree))
  (let tf1 ((Tip ?tv3)) (Ptip Zero ?tv3))
  (let tf1 ((Bin ?tv4 ?tv5)) (Pbin (tf2 (tf0 ?tv4)) (tf2 (tf0 ?tv5))))
  (:: tf0 (-> (Tree) PTree))
  (let tf0 (?tv1) (tf1 ?tv1))
  (:: tri (-> (Tree) PTree))
  (let tri (?tv0) (tf0 ?tv0))
  (:: times (-> (Nat Nat) Nat))
  (let times (Zero ?x) Zero)
  (let times ((Succ ?x) ?y) (plus (times ?x ?y) ?y))
  (:: tf5 (-> (PTree) Nat))
  (let tf5 ((Ptip ?tv15 ?tv16)) (times ?tv15 ?tv16))
  (let tf5 ((Pbin ?tv17 ?tv18)) (plus (tf4 ?tv17) (tf4 ?tv18)))
  (:: tf4 (-> (PTree) Nat))
  (let tf4 (?tv13) (tf5 ?tv13))
  (:: tsum (-> (PTree) Nat))
  (let tsum (?tv12) (tf4 ?tv12))
  (:: main (-> (Tree) Nat))
  (let main (?tv19) (tsum (tri ?tv19)))
  (:: fst1 (-> (Tuple1) Nat))
  (let fst1 ((MakeTuple1 ?x0 ?x1)) ?x0)
  (:: snd1 (-> (Tuple1) Nat))
  (let snd1 ((MakeTuple1 ?x0 ?x1)) ?x1)
  (:: tf7 (-> (Tree) Tuple1))
  (let tf7 ((Tip ?tv23)) (MakeTuple1 Zero ?tv23))
  (let tf7 ((Bin ?tv24 ?tv25)) (MakeTuple1 (plus (plus (plus (fst1 (tf6 ?tv24)) (snd1 (tf6 ?tv24))) (fst1 (tf6 ?tv25))) (snd1 (tf6 ?tv25))) (plus (snd1 (tf6 ?tv24)) (snd1 (tf6 ?tv25)))))
  (:: tf6 (-> (Tree) Tuple1))
  (let tf6 (?tv21) (tf7 ?tv21))
  (:: triNew (-> (Tree) Tuple1))
  (let triNew (?tv20) (tf6 ?tv20))
  (:: mainNew (-> (Tree) Nat))
  (let mainNew (?tv26) (fst1 (triNew ?tv26)))
  (=== optimize (inp0) (Tree) (main inp0) (mainNew inp0))
)
