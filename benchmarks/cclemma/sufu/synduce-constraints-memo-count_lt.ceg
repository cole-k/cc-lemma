(
  (data Bool (True False))
  (:: True Bool)
  (:: False Bool)
  (data Nat (Zero Succ))
  (:: Zero Nat)
  (:: Succ (-> (Nat) Nat))
  (data Tree (Leaf Node))
  (:: Leaf (-> (Nat) Tree))
  (:: Node (-> (Nat Tree Tree) Tree))
  (data TreeMemo (Mleaf Mnode))
  (:: Mleaf (-> (Nat Nat) TreeMemo))
  (:: Mnode (-> (Nat Nat TreeMemo TreeMemo) TreeMemo))
  (:: tf0 (-> (TreeMemo) Nat))
  (let tf0 ((Mleaf ?tv1 ?tv2)) ?tv1)
  (let tf0 ((Mnode ?tv3 ?tv4 ?tv5 ?tv6)) ?tv3)
  (:: memo (-> (TreeMemo) Nat))
  (let memo (?tv0) (tf0 ?tv0))
  (:: and (-> (Bool Bool) Bool))
  (let and (False ?x) False)
  (let and (?x False) False)
  (let and (True True) True)
  (:: geq (-> (Nat Nat) Bool))
  (let geq (Zero (Succ ?x)) False)
  (let geq (?x Zero) True)
  (let geq ((Succ ?x) (Succ ?y)) (geq ?x ?y))
  (:: lq (-> (Nat Nat) Bool))
  (let lq (Zero (Succ ?x)) True)
  (let lq (?x Zero) False)
  (let lq ((Succ ?x) (Succ ?y)) (lq ?x ?y))
  (:: nateq (-> (Nat Nat) Bool))
  (let nateq (Zero Zero) True)
  (let nateq (Zero (Succ ?x)) False)
  (let nateq ((Succ ?x) Zero) False)
  (let nateq ((Succ ?x) (Succ ?y)) (nateq ?x ?y))
  (:: ite3 (-> (Bool Bool Bool) Bool))
  (let ite3 (True ?x ?y) ?x)
  (let ite3 (False ?x ?y) ?y)
  (:: plus (-> (Nat Nat) Nat))
  (let plus (Zero ?x) ?x)
  (let plus ((Succ ?x) ?y) (Succ (plus ?x ?y)))
  (:: ite4 (-> (Bool Nat Nat) Nat))
  (let ite4 (True ?x ?y) ?x)
  (let ite4 (False ?x ?y) ?y)
  (:: tf2 (-> (TreeMemo) Bool))
  (let tf2 ((Mleaf ?tv10 ?tv11)) (and (geq ?tv10 Zero) (ite3 (lq ?tv11 (Succ (Succ Zero))) (nateq ?tv10 (Succ Zero)) (nateq ?tv10 Zero))))
  (let tf2 ((Mnode ?tv12 ?tv13 ?tv14 ?tv15)) (and (and (geq ?tv12 Zero) (nateq ?tv12 (plus (ite4 (lq ?tv13 (Succ (Succ Zero))) (Succ Zero) Zero) (plus (memo ?tv14) (memo ?tv15))))) (and (tf1 ?tv14) (tf1 ?tv15))))
  (:: tf1 (-> (TreeMemo) Bool))
  (let tf1 (?tv8) (tf2 ?tv8))
  (:: ismemo (-> (TreeMemo) Bool))
  (let ismemo (?tv7) (tf1 ?tv7))
  (:: tf4 (-> (TreeMemo) Tree))
  (let tf4 ((Mleaf ?tv19 ?tv20)) (Leaf ?tv20))
  (let tf4 ((Mnode ?tv21 ?tv22 ?tv23 ?tv24)) (Node ?tv22 (tf3 ?tv23) (tf3 ?tv24)))
  (:: tf3 (-> (TreeMemo) Tree))
  (let tf3 (?tv17) (tf4 ?tv17))
  (:: repr (-> (TreeMemo) Tree))
  (let repr (?tv16) (tf3 ?tv16))
  (:: tf6 (-> (Tree) Nat))
  (let tf6 ((Leaf ?tv28)) (ite4 (lq ?tv28 (Succ (Succ Zero))) (Succ Zero) Zero))
  (let tf6 ((Node ?tv29 ?tv30 ?tv31)) (ite4 (lq ?tv29 (Succ (Succ Zero))) (plus (Succ Zero) (plus (tf5 ?tv30) (tf5 ?tv31))) (plus (tf5 ?tv30) (tf5 ?tv31))))
  (:: tf5 (-> (Tree) Nat))
  (let tf5 (?tv26) (tf6 ?tv26))
  (:: spec (-> (Tree) Nat))
  (let spec (?tv25) (tf5 ?tv25))
  (:: ite5 (-> (Bool TreeMemo TreeMemo) TreeMemo))
  (let ite5 (True ?x ?y) ?x)
  (let ite5 (False ?x ?y) ?y)
  (:: tf8 (-> (TreeMemo TreeMemo) TreeMemo))
  (let tf8 (?tv34 (Mleaf ?tv35 ?tv36)) (ite5 (lq ?tv36 (Succ (Succ Zero))) ?tv34 ?tv34))
  (let tf8 (?tv34 (Mnode ?tv37 ?tv38 ?tv39 ?tv40)) (ite5 (lq ?tv38 (Succ (Succ Zero))) ?tv34 ?tv34))
  (:: tf7 (-> (TreeMemo) TreeMemo))
  (let tf7 (?tv33) (tf8 ?tv33 ?tv33))
  (:: target (-> (TreeMemo) TreeMemo))
  (let target (?tv32) (tf7 ?tv32))
  (:: main (-> (TreeMemo) Nat))
  (let main (?tv41) (ite4 (ismemo ?tv41) (spec (repr (target ?tv41))) Zero))
  (:: mainNew (-> (TreeMemo) Nat))
  (let mainNew (?tv42) (ite4 (ismemo ?tv42) (memo ?tv42) Zero))
  (=== optimize (inp0) (TreeMemo) (main inp0) (mainNew inp0))
)
