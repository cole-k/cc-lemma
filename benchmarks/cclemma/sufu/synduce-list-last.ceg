(
  (data Bool (True False))
  (:: True Bool)
  (:: False Bool)
  (data Nat (Zero Succ))
  (:: Zero Nat)
  (:: Succ (-> (Nat) Nat))
  (data List (Elt Cons))
  (:: Elt (-> (Nat) List))
  (:: Cons (-> (Nat List) List))
  (data CList (Single Concat))
  (:: Single (-> (Nat) CList))
  (:: Concat (-> (CList CList) CList))
  (:: tf1 (-> (List) Nat))
  (let tf1 ((Elt ?tv3)) ?tv3)
  (let tf1 ((Cons ?tv4 ?tv5)) (tf0 ?tv5))
  (:: tf0 (-> (List) Nat))
  (let tf0 (?tv1) (tf1 ?tv1))
  (:: spec (-> (List) Nat))
  (let spec (?tv0) (tf0 ?tv0))
  (:: tf3 (-> (List List) List))
  (let tf3 (?tv11 (Elt ?tv12)) (Cons ?tv12 ?tv11))
  (let tf3 (?tv11 (Cons ?tv13 ?tv14)) (Cons ?tv13 (tf2 ?tv14 ?tv11)))
  (:: tf2 (-> (List List) List))
  (let tf2 (?tv8 ?tv9) (tf3 ?tv9 ?tv8))
  (:: cat (-> (List List) List))
  (let cat (?tv6 ?tv7) (tf2 ?tv6 ?tv7))
  (:: tf5 (-> (CList) List))
  (let tf5 ((Single ?tv18)) (Elt ?tv18))
  (let tf5 ((Concat ?tv19 ?tv20)) (cat (tf4 ?tv19) (tf4 ?tv20)))
  (:: tf4 (-> (CList) List))
  (let tf4 (?tv16) (tf5 ?tv16))
  (:: repr (-> (CList) List))
  (let repr (?tv15) (tf4 ?tv15))
  (:: main (-> (CList) Nat))
  (let main (?tv21) (spec (repr ?tv21)))
  (:: tf7 (-> (CList) Nat))
  (let tf7 ((Single ?tv25)) ?tv25)
  (let tf7 ((Concat ?tv26 ?tv27)) (tf6 ?tv27))
  (:: tf6 (-> (CList) Nat))
  (let tf6 (?tv23) (tf7 ?tv23))
  (:: reprNew (-> (CList) Nat))
  (let reprNew (?tv22) (tf6 ?tv22))
  (:: mainNew (-> (CList) Nat))
  (let mainNew (?tv28) (reprNew ?tv28))
  (=== optimize (inp0) (CList) (main inp0) (mainNew inp0))
)
