(datatype Nat () ((succ Nat Nat) (zero Nat)))
(datatype Lst () ((cons Nat Lst Lst) (nil Lst)))
(declare-fun last (Lst) Nat)
(declare-fun leq (Nat Nat) Bool)
(=> rule0 (leq ?__x0 ?__y1) (or (= ?__x0 ?__y1) (less ?__x0 ?__y1)))
(=> rule1 (or (= ?__x0 ?__y1) (less ?__x0 ?__y1)) (leq ?__x0 ?__y1))
(=> rule2 (last (cons ?x ?y)) (ite (= ?y nil) ?x (last ?y)))
(=> rule3 (ite (= ?y nil) ?x (last ?y)) (last (cons ?x ?y)))
(prove (forall ((xs Lst)(x Nat)) (=> (= xs nil) (= (last (cons x xs)) x))))
