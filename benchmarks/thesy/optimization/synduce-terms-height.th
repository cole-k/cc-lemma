  (datatype Bool () ((true Bool) (false Bool)))
  (datatype Unit () ((null Unit)))
  (datatype ArithOp () ((aPlus Unit ArithOp) (aMinus Unit ArithOp) (aGt Unit ArithOp)))
  (datatype BoolOp () ((bNot Unit BoolOp) (bAnd Unit BoolOp) (bOr Unit BoolOp) (bEq Unit BoolOp)))
  (datatype Nat () ((zero Nat) (succ Nat Nat)))
  (datatype Term () ((tArithBin ArithOp Term Term Term) (tBoolBin BoolOp Term Term Term) (tArithUn ArithOp Term Term) (tBoolUn BoolOp Term Term) (tVar Nat Term) (tCInt Nat Term) (tCBool Bool Term)))
  (datatype Op () ((opPlus Unit Op) (opMinus Unit Op) (opNot Unit Op) (opAnd Unit Op) (opOr Unit Op) (opGt Unit Op) (opEq Unit Op)))
  (datatype Term2 () ((bin Op Term2 Term2 Term2) (un Op Term2 Term2) (var Nat Term2) (cInt Nat Term2) (cBool Bool Term2)))
  (declare-fun tf0 (Term Term Op) Term)
  (=> tf0r0 (tf0 ?tv3 ?tv4 (opPlus ?tv5)) (tArithBin (aPlus null) ?tv4 ?tv3))
  (=> tf0r1 (tf0 ?tv3 ?tv4 (opMinus ?tv6)) (tArithBin (aMinus null) ?tv4 ?tv3))
  (=> tf0r2 (tf0 ?tv3 ?tv4 (opNot ?tv7)) (tBoolBin (bNot null) ?tv4 ?tv3))
  (=> tf0r3 (tf0 ?tv3 ?tv4 (opAnd ?tv8)) (tBoolBin (bAnd null) ?tv4 ?tv3))
  (=> tf0r4 (tf0 ?tv3 ?tv4 (opOr ?tv9)) (tBoolBin (bOr null) ?tv4 ?tv3))
  (=> tf0r5 (tf0 ?tv3 ?tv4 (opGt ?tv10)) (tArithBin (aGt null) ?tv4 ?tv3))
  (=> tf0r6 (tf0 ?tv3 ?tv4 (opEq ?tv11)) (tBoolBin (bEq null) ?tv4 ?tv3))
  (declare-fun mk_bin (Term Term Op) Term)
  (=> mk_binr0 (mk_bin ?tv0 ?tv1 ?tv2) (tf0 ?tv1 ?tv0 ?tv2))
  (declare-fun tf1 (Term Op) Term)
  (=> tf1r0 (tf1 ?tv14 (opPlus ?tv15)) (tArithUn (aPlus null) ?tv14))
  (=> tf1r1 (tf1 ?tv14 (opMinus ?tv16)) (tArithUn (aMinus null) ?tv14))
  (=> tf1r2 (tf1 ?tv14 (opNot ?tv17)) (tBoolUn (bNot null) ?tv14))
  (=> tf1r3 (tf1 ?tv14 (opAnd ?tv18)) (tBoolUn (bAnd null) ?tv14))
  (=> tf1r4 (tf1 ?tv14 (opOr ?tv19)) (tBoolUn (bOr null) ?tv14))
  (=> tf1r5 (tf1 ?tv14 (opGt ?tv20)) (tArithUn (aGt null) ?tv14))
  (=> tf1r6 (tf1 ?tv14 (opEq ?tv21)) (tBoolUn (bEq null) ?tv14))
  (declare-fun mk_un (Term Op) Term)
  (=> mk_unr0 (mk_un ?tv12 ?tv13) (tf1 ?tv12 ?tv13))
  (declare-fun tf3 (Term2) Term)
  (=> tf3r0 (tf3 (bin ?tv25 ?tv26 ?tv27)) (mk_bin (tf2 ?tv26) (tf2 ?tv27) ?tv25))
  (=> tf3r1 (tf3 (un ?tv28 ?tv29)) (mk_un (tf2 ?tv29) ?tv28))
  (=> tf3r2 (tf3 (var ?tv30)) (tVar ?tv30))
  (=> tf3r3 (tf3 (cInt ?tv31)) (tCInt ?tv31))
  (=> tf3r4 (tf3 (cBool ?tv32)) (tCBool ?tv32))
  (declare-fun tf2 (Term2) Term)
  (=> tf2r0 (tf2 ?tv23) (tf3 ?tv23))
  (declare-fun repr (Term2) Term)
  (=> reprr0 (repr ?tv22) (tf2 ?tv22))
  (declare-fun lq (Nat Nat) Bool)
  (=> lqr0 (lq zero (succ ?x)) true)
  (=> lqr1 (lq ?x zero) false)
  (=> lqr2 (lq (succ ?x) (succ ?y)) (lq ?x ?y))
  (declare-fun ite6 (Bool Nat Nat) Nat)
  (=> ite6r0 (ite6 true ?x ?y) ?x)
  (=> ite6r1 (ite6 false ?x ?y) ?y)
  (declare-fun max (Nat Nat) Nat)
  (=> maxr0 (max ?tv33 ?tv34) (ite6 (lq ?tv33 ?tv34) ?tv34 ?tv33))
  (declare-fun plus (Nat Nat) Nat)
  (=> plusr0 (plus zero ?x) ?x)
  (=> plusr1 (plus (succ ?x) ?y) (succ (plus ?x ?y)))
  (declare-fun tf5 (Term) Nat)
  (=> tf5r0 (tf5 (tArithBin ?tv38 ?tv39 ?tv40)) (plus (succ zero) (max (tf4 ?tv39) (tf4 ?tv40))))
  (=> tf5r1 (tf5 (tBoolBin ?tv41 ?tv42 ?tv43)) (plus (succ zero) (max (tf4 ?tv42) (tf4 ?tv43))))
  (=> tf5r2 (tf5 (tArithUn ?tv44 ?tv45)) (plus (succ zero) (tf4 ?tv45)))
  (=> tf5r3 (tf5 (tBoolUn ?tv46 ?tv47)) (plus (succ zero) (tf4 ?tv47)))
  (=> tf5r4 (tf5 (tVar ?tv48)) (succ zero))
  (=> tf5r5 (tf5 (tCInt ?tv49)) (succ zero))
  (=> tf5r6 (tf5 (tCBool ?tv50)) (succ zero))
  (declare-fun tf4 (Term) Nat)
  (=> tf4r0 (tf4 ?tv36) (tf5 ?tv36))
  (declare-fun spec (Term) Nat)
  (=> specr0 (spec ?tv35) (tf4 ?tv35))
  (declare-fun tf7 (Term2) Term2)
  (=> tf7r0 (tf7 (bin ?tv54 ?tv55 ?tv56)) (bin ?tv54 (tf6 ?tv55) (tf6 ?tv56)))
  (=> tf7r1 (tf7 (un ?tv57 ?tv58)) (un ?tv57 (tf6 ?tv58)))
  (=> tf7r2 (tf7 (var ?tv59)) (var ?tv59))
  (=> tf7r3 (tf7 (cInt ?tv60)) (cInt ?tv60))
  (=> tf7r4 (tf7 (cBool ?tv61)) (cBool ?tv61))
  (declare-fun tf6 (Term2) Term2)
  (=> tf6r0 (tf6 ?tv52) (tf7 ?tv52))
  (declare-fun target (Term2) Term2)
  (=> targetr0 (target ?tv51) (tf6 ?tv51))
  (declare-fun main (Term2) Nat)
  (=> mainr0 (main ?tv62) (spec (repr (target ?tv62))))
  (declare-fun tf9 (Term2) Nat)
  (=> tf9r0 (tf9 (bin ?tv66 ?tv67 ?tv68)) (plus (succ zero) (max (tf8 ?tv67) (tf8 ?tv68))))
  (=> tf9r1 (tf9 (un ?tv69 ?tv70)) (plus (succ zero) (tf8 ?tv70)))
  (=> tf9r2 (tf9 (var ?tv71)) (succ zero))
  (=> tf9r3 (tf9 (cInt ?tv72)) (succ zero))
  (=> tf9r4 (tf9 (cBool ?tv73)) (succ zero))
  (declare-fun tf8 (Term2) Nat)
  (=> tf8r0 (tf8 ?tv64) (tf9 ?tv64))
  (declare-fun target_ (Term2) Nat)
  (=> target_r0 (target_ ?tv63) (tf8 ?tv63))
  (declare-fun main_ (Term2) Nat)
  (=> main_r0 (main_ ?tv74) (target_ ?tv74))
  (prove (forall ((inp0 Term2)) (= (main inp0) (main_ inp0))))
