  (datatype Bool () ((true Bool) (false Bool)))
  (datatype Unit () ((null Unit)))
  (datatype Nat () ((zero Nat) (succ Nat Nat)))
  (datatype List () ((nil Unit List) (cons Nat List List)))
  (datatype Zipper () ((zip List List Zipper)))
  (declare-fun tf1 (List List) List)
  (=> tf1r0 (tf1 ?tv5 (nil ?tv6)) ?tv5)
  (=> tf1r1 (tf1 ?tv5 (cons ?tv7 ?tv8)) (cons ?tv7 (tf0 ?tv8 ?tv5)))
  (declare-fun tf0 (List List) List)
  (=> tf0r0 (tf0 ?tv2 ?tv3) (tf1 ?tv3 ?tv2))
  (declare-fun concat (List List) List)
  (=> concatr0 (concat ?tv0 ?tv1) (tf0 ?tv0 ?tv1))
  (declare-fun tf3 (List) List)
  (=> tf3r0 (tf3 (nil ?tv12)) (nil null))
  (=> tf3r1 (tf3 (cons ?tv13 ?tv14)) (concat (tf2 ?tv14) (cons ?tv13 (nil null))))
  (declare-fun tf2 (List) List)
  (=> tf2r0 (tf2 ?tv10) (tf3 ?tv10))
  (declare-fun rev (List) List)
  (=> revr0 (rev ?tv9) (tf2 ?tv9))
  (declare-fun tf5 (List) List)
  (=> tf5r0 (tf5 (nil ?tv18)) (nil null))
  (=> tf5r1 (tf5 (cons ?tv19 ?tv20)) (cons ?tv19 (tf4 ?tv20)))
  (declare-fun tf4 (List) List)
  (=> tf4r0 (tf4 ?tv16) (tf5 ?tv16))
  (declare-fun list_repr (List) List)
  (=> list_reprr0 (list_repr ?tv15) (tf4 ?tv15))
  (declare-fun plus (Nat Nat) Nat)
  (=> plusr0 (plus zero ?x) ?x)
  (=> plusr1 (plus (succ ?x) ?y) (succ (plus ?x ?y)))
  (declare-fun tf7 (List) Nat)
  (=> tf7r0 (tf7 (nil ?tv24)) zero)
  (=> tf7r1 (tf7 (cons ?tv25 ?tv26)) (plus ?tv25 (tf6 ?tv26)))
  (declare-fun tf6 (List) Nat)
  (=> tf6r0 (tf6 ?tv22) (tf7 ?tv22))
  (declare-fun sum (List) Nat)
  (=> sumr0 (sum ?tv21) (tf6 ?tv21))
  (declare-fun tf8 (Zipper) List)
  (=> tf8r0 (tf8 (zip ?tv28 ?tv29)) (concat (rev ?tv28) (list_repr ?tv29)))
  (declare-fun repr (Zipper) List)
  (=> reprr0 (repr ?tv27) (tf8 ?tv27))
  (declare-fun main (Zipper) Nat)
  (=> mainr0 (main ?tv30) (sum (repr ?tv30)))
  (declare-fun tf10 (List) Nat)
  (=> tf10r0 (tf10 (nil ?tv34)) zero)
  (=> tf10r1 (tf10 (cons ?tv35 ?tv36)) (plus ?tv35 (tf9 ?tv36)))
  (declare-fun tf9 (List) Nat)
  (=> tf9r0 (tf9 ?tv32) (tf10 ?tv32))
  (declare-fun rev_ (List) Nat)
  (=> rev_r0 (rev_ ?tv31) (tf9 ?tv31))
  (declare-fun tf12 (List) Nat)
  (=> tf12r0 (tf12 (nil ?tv40)) zero)
  (=> tf12r1 (tf12 (cons ?tv41 ?tv42)) (plus (tf11 ?tv42) ?tv41))
  (declare-fun tf11 (List) Nat)
  (=> tf11r0 (tf11 ?tv38) (tf12 ?tv38))
  (declare-fun list_repr_ (List) Nat)
  (=> list_repr_r0 (list_repr_ ?tv37) (tf11 ?tv37))
  (declare-fun tf13 (Zipper) Nat)
  (=> tf13r0 (tf13 (zip ?tv44 ?tv45)) (plus (rev_ ?tv44) (list_repr_ ?tv45)))
  (declare-fun repr_ (Zipper) Nat)
  (=> repr_r0 (repr_ ?tv43) (tf13 ?tv43))
  (declare-fun main_ (Zipper) Nat)
  (=> main_r0 (main_ ?tv46) (repr_ ?tv46))
  (prove (forall ((inp0 Zipper)) (= (main inp0) (main_ inp0))))
