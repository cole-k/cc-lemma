  (datatype Bool () ((true Bool) (false Bool)))
  (datatype Nat () ((zero Nat) (succ Nat Nat)))
  (datatype List () ((elt Nat List) (cons Nat List List)))
  (datatype MList () ((ielt Nat MList) (icons Nat Nat MList MList)))
  (declare-fun tf1 (MList) List)
  (=> tf1r0 (tf1 (ielt ?tv3)) (elt ?tv3))
  (=> tf1r1 (tf1 (icons ?tv4 ?tv5 ?tv6)) (cons ?tv4 (tf0 ?tv6)))
  (declare-fun tf0 (MList) List)
  (=> tf0r0 (tf0 ?tv1) (tf1 ?tv1))
  (declare-fun repr (MList) List)
  (=> reprr0 (repr ?tv0) (tf0 ?tv0))
  (declare-fun plus (Nat Nat) Nat)
  (=> plusr0 (plus zero ?x) ?x)
  (=> plusr1 (plus (succ ?x) ?y) (succ (plus ?x ?y)))
  (declare-fun tf3 (List) Nat)
  (=> tf3r0 (tf3 (elt ?tv10)) ?tv10)
  (=> tf3r1 (tf3 (cons ?tv11 ?tv12)) (plus ?tv11 (tf2 ?tv12)))
  (declare-fun tf2 (List) Nat)
  (=> tf2r0 (tf2 ?tv8) (tf3 ?tv8))
  (declare-fun sum (List) Nat)
  (=> sumr0 (sum ?tv7) (tf2 ?tv7))
  (declare-fun and (Bool Bool) Bool)
  (=> andr0 (and false ?x) false)
  (=> andr1 (and ?x false) false)
  (=> andr2 (and true true) true)
  (declare-fun nat_eq (Nat Nat) Bool)
  (=> nat_eqr0 (nat_eq zero zero) true)
  (=> nat_eqr1 (nat_eq zero (succ ?x)) false)
  (=> nat_eqr2 (nat_eq (succ ?x) zero) false)
  (=> nat_eqr3 (nat_eq (succ ?x) (succ ?y)) (nat_eq ?x ?y))
  (declare-fun tf5 (MList MList) Bool)
  (=> tf5r0 (tf5 ?tv16 (ielt ?tv17)) true)
  (=> tf5r1 (tf5 ?tv16 (icons ?tv18 ?tv19 ?tv20)) (and (nat_eq ?tv19 (sum (repr ?tv16))) (tf4 ?tv20)))
  (declare-fun tf4 (MList) Bool)
  (=> tf4r0 (tf4 ?tv14) (tf5 ?tv14 ?tv14))
  (declare-fun is_memo (MList) Bool)
  (=> is_memor0 (is_memo ?tv13) (tf4 ?tv13))
  (declare-fun lq (Nat Nat) Bool)
  (=> lqr0 (lq zero (succ ?x)) true)
  (=> lqr1 (lq ?x zero) false)
  (=> lqr2 (lq (succ ?x) (succ ?y)) (lq ?x ?y))
  (declare-fun ite2 (Bool Nat Nat) Nat)
  (=> ite2r0 (ite2 true ?x ?y) ?x)
  (=> ite2r1 (ite2 false ?x ?y) ?y)
  (declare-fun max (Nat Nat) Nat)
  (=> maxr0 (max ?tv21 ?tv22) (ite2 (lq ?tv21 ?tv22) ?tv22 ?tv21))
  (declare-fun tf7 (List List) Nat)
  (=> tf7r0 (tf7 ?tv25 (elt ?tv27)) ?tv27)
  (=> tf7r1 (tf7 ?tv25 (cons ?tv28 ?tv29)) (max (tf6 ?tv29) (sum ?tv25)))
  (declare-fun tf6 (List) Nat)
  (=> tf6r0 (tf6 ?tv24) (tf7 ?tv24 ?tv24))
  (declare-fun spec (List) Nat)
  (=> specr0 (spec ?tv23) (tf6 ?tv23))
  (declare-fun tf9 (MList MList) MList)
  (=> tf9r0 (tf9 ?tv33 (ielt ?tv34)) ?tv33)
  (=> tf9r1 (tf9 ?tv33 (icons ?tv35 ?tv36 ?tv37)) (icons ?tv35 ?tv36 (tf8 ?tv37)))
  (declare-fun tf8 (MList) MList)
  (=> tf8r0 (tf8 ?tv31) (tf9 ?tv31 ?tv31))
  (declare-fun target (MList) MList)
  (=> targetr0 (target ?tv30) (tf8 ?tv30))
  (declare-fun main (MList) Nat)
  (=> mainr0 (main ?tv38) (ite2 (is_memo ?tv38) (spec (repr (target ?tv38))) zero))
  (declare-fun tf11 (MList) Nat)
  (=> tf11r0 (tf11 (ielt ?tv42)) ?tv42)
  (=> tf11r1 (tf11 (icons ?tv43 ?tv44 ?tv45)) (ite2 (lq (tf10 ?tv45) ?tv44) ?tv44 (tf10 ?tv45)))
  (declare-fun tf10 (MList) Nat)
  (=> tf10r0 (tf10 ?tv40) (tf11 ?tv40))
  (declare-fun target_ (MList) Nat)
  (=> target_r0 (target_ ?tv39) (tf10 ?tv39))
  (declare-fun main_ (MList) Nat)
  (=> main_r0 (main_ ?tv46) (ite2 (is_memo ?tv46) (target_ ?tv46) zero))
  (prove (forall ((inp0 MList)) (= (main inp0) (main_ inp0))))
