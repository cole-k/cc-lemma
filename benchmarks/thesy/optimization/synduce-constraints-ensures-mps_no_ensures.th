  (datatype Bool () ((true Bool) (false Bool)))
  (datatype Unit () ((null Unit)))
  (datatype Nat () ((zero Nat) (succ Nat Nat)))
  (datatype CList () ((cnil Unit CList) (single Nat CList) (concat CList CList CList)))
  (datatype List () ((nil Unit List) (cons Nat List List)))
  (declare-fun tf1 (List List) List)
  (=> tf1r0 (tf1 ?tv4 (cons ?tv6 ?tv7)) (cons ?tv6 (tf0 ?tv7 ?tv4)))
  (=> tf1r1 (tf1 ?tv4 (nil ?tv8)) ?tv4)
  (declare-fun tf0 (List List) List)
  (=> tf0r0 (tf0 ?tv2 ?tv3) (tf1 ?tv3 ?tv2))
  (declare-fun cat (List List) List)
  (=> catr0 (cat ?tv0 ?tv1) (tf0 ?tv0 ?tv1))
  (declare-fun tf3 (CList) List)
  (=> tf3r0 (tf3 (cnil ?tv12)) (nil null))
  (=> tf3r1 (tf3 (single ?tv13)) (cons ?tv13 (nil null)))
  (=> tf3r2 (tf3 (concat ?tv14 ?tv15)) (cat (tf2 ?tv14) (tf2 ?tv15)))
  (declare-fun tf2 (CList) List)
  (=> tf2r0 (tf2 ?tv10) (tf3 ?tv10))
  (declare-fun repr (CList) List)
  (=> reprr0 (repr ?tv9) (tf2 ?tv9))
  (declare-fun lq (Nat Nat) Bool)
  (=> lqr0 (lq zero (succ ?x)) true)
  (=> lqr1 (lq ?x zero) false)
  (=> lqr2 (lq (succ ?x) (succ ?y)) (lq ?x ?y))
  (declare-fun ite2 (Bool Nat Nat) Nat)
  (=> ite2r0 (ite2 true ?x ?y) ?x)
  (=> ite2r1 (ite2 false ?x ?y) ?y)
  (declare-fun max (Nat) Nat)
  (=> maxr0 (max ?tv17) (ite2 (lq zero ?tv17) ?tv17 zero))
  (datatype Tuple3 () ((makeTuple3 Nat Nat Tuple3)))
  (declare-fun plus (Nat Nat) Nat)
  (=> plusr0 (plus zero ?x) ?x)
  (=> plusr1 (plus (succ ?x) ?y) (succ (plus ?x ?y)))
  (declare-fun fst_3 (Tuple3) Nat)
  (=> fst_3r0 (fst_3 (makeTuple3 ?x0 ?x1)) ?x0)
  (declare-fun snd_3 (Tuple3) Nat)
  (=> snd_3r0 (snd_3 (makeTuple3 ?x0 ?x1)) ?x1)
  (declare-fun tf5 (List) Tuple3)
  (=> tf5r0 (tf5 (nil ?tv21)) (makeTuple3 zero zero))
  (=> tf5r1 (tf5 (cons ?tv22 ?tv23)) (makeTuple3 (max (plus (fst_3 (tf4 ?tv23)) ?tv22)) (plus (snd_3 (tf4 ?tv23)) ?tv22)))
  (declare-fun tf4 (List) Tuple3)
  (=> tf4r0 (tf4 ?tv19) (tf5 ?tv19))
  (declare-fun spec (List) Nat)
  (=> specr0 (spec ?tv18) (fst_3 (tf4 ?tv18)))
  (declare-fun main (CList) Nat)
  (=> mainr0 (main ?tv24) (spec (repr ?tv24)))
  (declare-fun tf7 (CList) Tuple3)
  (=> tf7r0 (tf7 (cnil ?tv28)) (makeTuple3 zero zero))
  (=> tf7r1 (tf7 (single ?tv29)) (makeTuple3 (ite2 (lq ?tv29 zero) zero ?tv29) ?tv29))
  (=> tf7r2 (tf7 (concat ?tv30 ?tv31)) (makeTuple3 (ite2 (lq (fst_3 (tf6 ?tv30)) (plus (snd_3 (tf6 ?tv30)) (fst_3 (tf6 ?tv31)))) (plus (snd_3 (tf6 ?tv30)) (fst_3 (tf6 ?tv31))) (fst_3 (tf6 ?tv30))) (plus (snd_3 (tf6 ?tv30)) (snd_3 (tf6 ?tv31)))))
  (declare-fun tf6 (CList) Tuple3)
  (=> tf6r0 (tf6 ?tv26) (tf7 ?tv26))
  (declare-fun repr_ (CList) Tuple3)
  (=> repr_r0 (repr_ ?tv25) (tf6 ?tv25))
  (declare-fun main_ (CList) Nat)
  (=> main_r0 (main_ ?tv32) (fst_3 (repr_ ?tv32)))
  (prove (forall ((inp0 CList)) (= (main inp0) (main_ inp0))))
