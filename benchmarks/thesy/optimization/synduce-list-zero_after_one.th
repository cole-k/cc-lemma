  (datatype Bool () ((true Bool) (false Bool)))
  (datatype Unit () ((null Unit)))
  (datatype BList () ((nil Unit BList) (cons Bool BList BList)))
  (datatype CList () ((emp Unit CList) (single Bool CList) (concat CList CList CList)))
  (declare-fun or (Bool Bool) Bool)
  (=> orr0 (or true ?x) true)
  (=> orr1 (or ?x true) true)
  (=> orr2 (or false false) false)
  (declare-fun op_or (Bool Bool) Bool)
  (=> op_orr0 (op_or ?tv0 ?tv1) (or ?tv0 ?tv1))
  (declare-fun tf1 (BList BList) BList)
  (=> tf1r0 (tf1 ?tv7 (nil ?tv8)) ?tv7)
  (=> tf1r1 (tf1 ?tv7 (cons ?tv9 ?tv10)) (cons ?tv9 (tf0 ?tv10 ?tv7)))
  (declare-fun tf0 (BList BList) BList)
  (=> tf0r0 (tf0 ?tv4 ?tv5) (tf1 ?tv5 ?tv4))
  (declare-fun cat_list (BList BList) BList)
  (=> cat_listr0 (cat_list ?tv2 ?tv3) (tf0 ?tv2 ?tv3))
  (declare-fun tf3 (CList) BList)
  (=> tf3r0 (tf3 (emp ?tv14)) (nil null))
  (=> tf3r1 (tf3 (single ?tv15)) (cons ?tv15 (nil null)))
  (=> tf3r2 (tf3 (concat ?tv16 ?tv17)) (cat_list (tf2 ?tv16) (tf2 ?tv17)))
  (declare-fun tf2 (CList) BList)
  (=> tf2r0 (tf2 ?tv12) (tf3 ?tv12))
  (declare-fun repr (CList) BList)
  (=> reprr0 (repr ?tv11) (tf2 ?tv11))
  (datatype Tuple2 () ((makeTuple2 Bool Bool Bool Tuple2)))
  (declare-fun fst_2 (Tuple2) Bool)
  (=> fst_2r0 (fst_2 (makeTuple2 ?x0 ?x1 ?x2)) ?x0)
  (declare-fun snd_2 (Tuple2) Bool)
  (=> snd_2r0 (snd_2 (makeTuple2 ?x0 ?x1 ?x2)) ?x1)
  (declare-fun and (Bool Bool) Bool)
  (=> andr0 (and false ?x) false)
  (=> andr1 (and ?x false) false)
  (=> andr2 (and true true) true)
  (declare-fun not (Bool) Bool)
  (=> notr0 (not true) false)
  (=> notr1 (not false) true)
  (declare-fun third_2 (Tuple2) Bool)
  (=> third_2r0 (third_2 (makeTuple2 ?x0 ?x1 ?x2)) ?x2)
  (declare-fun tf5 (BList) Tuple2)
  (=> tf5r0 (tf5 (nil ?tv21)) (makeTuple2 false false false))
  (=> tf5r1 (tf5 (cons ?tv22 ?tv23)) (makeTuple2 (or (fst_2 (tf4 ?tv23)) ?tv22) (or (snd_2 (tf4 ?tv23)) (and (fst_2 (tf4 ?tv23)) (not ?tv22))) (or (third_2 (tf4 ?tv23)) (not ?tv22))))
  (declare-fun tf4 (BList) Tuple2)
  (=> tf4r0 (tf4 ?tv19) (tf5 ?tv19))
  (declare-fun spec (BList) Bool)
  (=> specr0 (spec ?tv18) (snd_2 (tf4 ?tv18)))
  (declare-fun main (CList) Bool)
  (=> mainr0 (main ?tv24) (spec (repr ?tv24)))
  (datatype Tuple3 () ((makeTuple3 Bool Bool Bool Bool Tuple3)))
  (declare-fun snd_3 (Tuple3) Bool)
  (=> snd_3r0 (snd_3 (makeTuple3 ?x0 ?x1 ?x2 ?x3)) ?x1)
  (declare-fun third_3 (Tuple3) Bool)
  (=> third_3r0 (third_3 (makeTuple3 ?x0 ?x1 ?x2 ?x3)) ?x2)
  (declare-fun fst_3 (Tuple3) Bool)
  (=> fst_3r0 (fst_3 (makeTuple3 ?x0 ?x1 ?x2 ?x3)) ?x0)
  (declare-fun fourth_3 (Tuple3) Bool)
  (=> fourth_3r0 (fourth_3 (makeTuple3 ?x0 ?x1 ?x2 ?x3)) ?x3)
  (declare-fun tf7 (CList) Tuple3)
  (=> tf7r0 (tf7 (emp ?tv28)) (makeTuple3 false true true false))
  (=> tf7r1 (tf7 (single ?tv29)) (makeTuple3 false ?tv29 false false))
  (=> tf7r2 (tf7 (concat ?tv30 ?tv31)) (makeTuple3 (or (or (and (and (not (snd_3 (tf6 ?tv30))) (not (third_3 (tf6 ?tv31)))) (op_or (fst_3 (tf6 ?tv31)) (snd_3 (tf6 ?tv31)))) (and (and (op_or (fst_3 (tf6 ?tv31)) (fourth_3 (tf6 ?tv30))) (not (third_3 (tf6 ?tv31)))) (op_or (fst_3 (tf6 ?tv31)) (snd_3 (tf6 ?tv31))))) (op_or (fst_3 (tf6 ?tv31)) (fst_3 (tf6 ?tv30)))) (or (and (snd_3 (tf6 ?tv31)) (snd_3 (tf6 ?tv30))) (and (snd_3 (tf6 ?tv30)) (not (third_3 (tf6 ?tv30))))) (and (third_3 (tf6 ?tv31)) (third_3 (tf6 ?tv30))) (or (or (and (and (not (snd_3 (tf6 ?tv31))) (not (third_3 (tf6 ?tv30)))) (op_or (snd_3 (tf6 ?tv31)) (snd_3 (tf6 ?tv30)))) (and (and (not (snd_3 (tf6 ?tv30))) (not (third_3 (tf6 ?tv31)))) (op_or (snd_3 (tf6 ?tv31)) (fourth_3 (tf6 ?tv31))))) (op_or (fourth_3 (tf6 ?tv31)) (fourth_3 (tf6 ?tv30))))))
  (declare-fun tf6 (CList) Tuple3)
  (=> tf6r0 (tf6 ?tv26) (tf7 ?tv26))
  (declare-fun repr_ (CList) Tuple3)
  (=> repr_r0 (repr_ ?tv25) (tf6 ?tv25))
  (declare-fun main_ (CList) Bool)
  (=> main_r0 (main_ ?tv32) (fst_3 (repr_ ?tv32)))
  (prove (forall ((inp0 CList)) (= (main inp0) (main_ inp0))))
