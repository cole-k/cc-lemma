  (datatype Bool () ((true Bool) (false Bool)))
  (datatype Nat () ((zero Nat) (succ Nat Nat)))
  (datatype Tree () ((leaf Nat Tree) (node Nat Tree Tree Tree)))
  (datatype TreeMemo () ((mleaf Nat Nat TreeMemo) (mnode Nat Nat TreeMemo TreeMemo TreeMemo)))
  (declare-fun tf0 (TreeMemo) Nat)
  (=> tf0r0 (tf0 (mleaf ?tv1 ?tv2)) ?tv1)
  (=> tf0r1 (tf0 (mnode ?tv3 ?tv4 ?tv5 ?tv6)) ?tv3)
  (declare-fun memo (TreeMemo) Nat)
  (=> memor0 (memo ?tv0) (tf0 ?tv0))
  (declare-fun and (Bool Bool) Bool)
  (=> andr0 (and false ?x) false)
  (=> andr1 (and ?x false) false)
  (=> andr2 (and true true) true)
  (declare-fun geq (Nat Nat) Bool)
  (=> geqr0 (geq zero (succ ?x)) false)
  (=> geqr1 (geq ?x zero) true)
  (=> geqr2 (geq (succ ?x) (succ ?y)) (geq ?x ?y))
  (declare-fun lq (Nat Nat) Bool)
  (=> lqr0 (lq zero (succ ?x)) true)
  (=> lqr1 (lq ?x zero) false)
  (=> lqr2 (lq (succ ?x) (succ ?y)) (lq ?x ?y))
  (declare-fun nat_eq (Nat Nat) Bool)
  (=> nat_eqr0 (nat_eq zero zero) true)
  (=> nat_eqr1 (nat_eq zero (succ ?x)) false)
  (=> nat_eqr2 (nat_eq (succ ?x) zero) false)
  (=> nat_eqr3 (nat_eq (succ ?x) (succ ?y)) (nat_eq ?x ?y))
  (declare-fun ite3 (Bool Bool Bool) Bool)
  (=> ite3r0 (ite3 true ?x ?y) ?x)
  (=> ite3r1 (ite3 false ?x ?y) ?y)
  (declare-fun plus (Nat Nat) Nat)
  (=> plusr0 (plus zero ?x) ?x)
  (=> plusr1 (plus (succ ?x) ?y) (succ (plus ?x ?y)))
  (declare-fun ite4 (Bool Nat Nat) Nat)
  (=> ite4r0 (ite4 true ?x ?y) ?x)
  (=> ite4r1 (ite4 false ?x ?y) ?y)
  (declare-fun tf2 (TreeMemo) Bool)
  (=> tf2r0 (tf2 (mleaf ?tv10 ?tv11)) (and (geq ?tv10 zero) (ite3 (lq ?tv11 (succ (succ zero))) (nat_eq ?tv10 (succ zero)) (nat_eq ?tv10 zero))))
  (=> tf2r1 (tf2 (mnode ?tv12 ?tv13 ?tv14 ?tv15)) (and (and (geq ?tv12 zero) (nat_eq ?tv12 (plus (ite4 (lq ?tv13 (succ (succ zero))) (succ zero) zero) (plus (memo ?tv14) (memo ?tv15))))) (and (tf1 ?tv14) (tf1 ?tv15))))
  (declare-fun tf1 (TreeMemo) Bool)
  (=> tf1r0 (tf1 ?tv8) (tf2 ?tv8))
  (declare-fun is_memo (TreeMemo) Bool)
  (=> is_memor0 (is_memo ?tv7) (tf1 ?tv7))
  (declare-fun tf4 (TreeMemo) Tree)
  (=> tf4r0 (tf4 (mleaf ?tv19 ?tv20)) (leaf ?tv20))
  (=> tf4r1 (tf4 (mnode ?tv21 ?tv22 ?tv23 ?tv24)) (node ?tv22 (tf3 ?tv23) (tf3 ?tv24)))
  (declare-fun tf3 (TreeMemo) Tree)
  (=> tf3r0 (tf3 ?tv17) (tf4 ?tv17))
  (declare-fun repr (TreeMemo) Tree)
  (=> reprr0 (repr ?tv16) (tf3 ?tv16))
  (declare-fun tf6 (Tree) Nat)
  (=> tf6r0 (tf6 (leaf ?tv28)) (ite4 (lq ?tv28 (succ (succ zero))) (succ zero) zero))
  (=> tf6r1 (tf6 (node ?tv29 ?tv30 ?tv31)) (ite4 (lq ?tv29 (succ (succ zero))) (plus (succ zero) (plus (tf5 ?tv30) (tf5 ?tv31))) (plus (tf5 ?tv30) (tf5 ?tv31))))
  (declare-fun tf5 (Tree) Nat)
  (=> tf5r0 (tf5 ?tv26) (tf6 ?tv26))
  (declare-fun spec (Tree) Nat)
  (=> specr0 (spec ?tv25) (tf5 ?tv25))
  (declare-fun ite5 (Bool TreeMemo TreeMemo) TreeMemo)
  (=> ite5r0 (ite5 true ?x ?y) ?x)
  (=> ite5r1 (ite5 false ?x ?y) ?y)
  (declare-fun tf8 (TreeMemo TreeMemo) TreeMemo)
  (=> tf8r0 (tf8 ?tv34 (mleaf ?tv35 ?tv36)) (ite5 (lq ?tv36 (succ (succ zero))) ?tv34 ?tv34))
  (=> tf8r1 (tf8 ?tv34 (mnode ?tv37 ?tv38 ?tv39 ?tv40)) (ite5 (lq ?tv38 (succ (succ zero))) ?tv34 ?tv34))
  (declare-fun tf7 (TreeMemo) TreeMemo)
  (=> tf7r0 (tf7 ?tv33) (tf8 ?tv33 ?tv33))
  (declare-fun target (TreeMemo) TreeMemo)
  (=> targetr0 (target ?tv32) (tf7 ?tv32))
  (declare-fun main (TreeMemo) Nat)
  (=> mainr0 (main ?tv41) (ite4 (is_memo ?tv41) (spec (repr (target ?tv41))) zero))
  (declare-fun main_ (TreeMemo) Nat)
  (=> main_r0 (main_ ?tv42) (ite4 (is_memo ?tv42) (memo ?tv42) zero))
  (prove (forall ((inp0 TreeMemo)) (= (main inp0) (main_ inp0))))
