  (datatype Bool () ((true Bool) (false Bool)))
  (datatype Unit () ((null Unit)))
  (datatype Nat () ((zero Nat) (succ Nat Nat)))
  (datatype List () ((nil Unit List) (cons Nat List List)))
  (datatype Zipper () ((zip List List Zipper)))
  (declare-fun tf1 (List List) List)
  (=> tf1r0 (tf1 ?tv5 (nil ?tv6)) ?tv5)
  (=> tf1r1 (tf1 ?tv5 (cons ?tv7 ?tv8)) (cons ?tv7 (tf0 ?tv8 ?tv5)))
  (declare-fun tf0 (List List) List)
  (=> tf0r0 (tf0 ?tv2 ?tv3) (tf1 ?tv3 ?tv2))
  (declare-fun concat (List List) List)
  (=> concatr0 (concat ?tv0 ?tv1) (tf0 ?tv0 ?tv1))
  (declare-fun tf3 (List) List)
  (=> tf3r0 (tf3 (nil ?tv12)) (nil null))
  (=> tf3r1 (tf3 (cons ?tv13 ?tv14)) (concat (tf2 ?tv14) (cons ?tv13 (nil null))))
  (declare-fun tf2 (List) List)
  (=> tf2r0 (tf2 ?tv10) (tf3 ?tv10))
  (declare-fun rev (List) List)
  (=> revr0 (rev ?tv9) (tf2 ?tv9))
  (declare-fun plus (Nat Nat) Nat)
  (=> plusr0 (plus zero ?x) ?x)
  (=> plusr1 (plus (succ ?x) ?y) (succ (plus ?x ?y)))
  (declare-fun tf5 (List) Nat)
  (=> tf5r0 (tf5 (nil ?tv18)) zero)
  (=> tf5r1 (tf5 (cons ?tv19 ?tv20)) (plus ?tv19 (tf4 ?tv20)))
  (declare-fun tf4 (List) Nat)
  (=> tf4r0 (tf4 ?tv16) (tf5 ?tv16))
  (declare-fun sum (List) Nat)
  (=> sumr0 (sum ?tv15) (tf4 ?tv15))
  (declare-fun tf6 (Zipper) List)
  (=> tf6r0 (tf6 (zip ?tv22 ?tv23)) (concat (rev ?tv22) ?tv23))
  (declare-fun repr (Zipper) List)
  (=> reprr0 (repr ?tv21) (tf6 ?tv21))
  (declare-fun tf8 (Zipper) Zipper)
  (=> tf8r0 (tf8 (zip ?tv26 ?tv27)) (zip ?tv26 ?tv27))
  (declare-fun tf7 (Zipper) Zipper)
  (=> tf7r0 (tf7 ?tv25) (tf8 ?tv25))
  (declare-fun target (Zipper) Zipper)
  (=> targetr0 (target ?tv24) (tf7 ?tv24))
  (declare-fun main (Zipper) Nat)
  (=> mainr0 (main ?tv28) (sum (repr (target ?tv28))))
  (declare-fun tf10 (Zipper) Nat)
  (=> tf10r0 (tf10 (zip ?tv31 ?tv32)) (plus (sum ?tv31) (sum ?tv32)))
  (declare-fun tf9 (Zipper) Nat)
  (=> tf9r0 (tf9 ?tv30) (tf10 ?tv30))
  (declare-fun target_ (Zipper) Nat)
  (=> target_r0 (target_ ?tv29) (tf9 ?tv29))
  (declare-fun main_ (Zipper) Nat)
  (=> main_r0 (main_ ?tv33) (target_ ?tv33))
  (prove (forall ((inp0 Zipper)) (= (main inp0) (main_ inp0))))
