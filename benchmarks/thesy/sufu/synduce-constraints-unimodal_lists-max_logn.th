  (datatype Bool () ((true Bool) (false Bool)))
  (datatype Unit () ((null Unit)))
  (datatype Nat () ((zero Nat) (succ Nat Nat)))
  (datatype UList () ((unil Unit UList) (uelt Nat UList) (usplit UList Nat Nat UList UList)))
  (datatype List () ((nil Unit List) (cons Nat List List)))
  (declare-fun tf1 (List UList) List)
  (=> tf1r0 (tf1 ?tv4 (unil ?tv5)) ?tv4)
  (=> tf1r1 (tf1 ?tv4 (uelt ?tv6)) (cons ?tv6 ?tv4))
  (=> tf1r2 (tf1 ?tv4 (usplit ?tv7 ?tv8 ?tv9 ?tv10)) (tf0 (cons ?tv8 (cons ?tv9 (tf0 ?tv4 ?tv10))) ?tv7))
  (declare-fun tf0 (List UList) List)
  (=> tf0r0 (tf0 ?tv1 ?tv2) (tf1 ?tv1 ?tv2))
  (declare-fun repr (UList) List)
  (=> reprr0 (repr ?tv0) (tf0 (nil null) ?tv0))
  (declare-fun gq (Nat Nat) Bool)
  (=> gqr0 (gq zero ?x) false)
  (=> gqr1 (gq (succ ?x) zero) true)
  (=> gqr2 (gq (succ ?x) (succ ?y)) (gq ?x ?y))
  (declare-fun and (Bool Bool) Bool)
  (=> andr0 (and false ?x) false)
  (=> andr1 (and ?x false) false)
  (=> andr2 (and true true) true)
  (declare-fun tf3 (Nat List) Bool)
  (=> tf3r0 (tf3 ?tv15 (nil ?tv16)) (gq ?tv15 zero))
  (=> tf3r1 (tf3 ?tv15 (cons ?tv17 ?tv18)) (and (gq ?tv15 zero) (and (gq ?tv15 ?tv17) (tf2 ?tv17 ?tv18))))
  (declare-fun tf2 (Nat List) Bool)
  (=> tf2r0 (tf2 ?tv12 ?tv13) (tf3 ?tv12 ?tv13))
  (declare-fun lq (Nat Nat) Bool)
  (=> lqr0 (lq zero (succ ?x)) true)
  (=> lqr1 (lq ?x zero) false)
  (=> lqr2 (lq (succ ?x) (succ ?y)) (lq ?x ?y))
  (declare-fun ite2 (Bool Bool Bool) Bool)
  (=> ite2r0 (ite2 true ?x ?y) ?x)
  (=> ite2r1 (ite2 false ?x ?y) ?y)
  (declare-fun tf5 (Nat List) Bool)
  (=> tf5r0 (tf5 ?tv22 (nil ?tv23)) (gq ?tv22 zero))
  (=> tf5r1 (tf5 ?tv22 (cons ?tv24 ?tv25)) (and (gq ?tv22 zero) (ite2 (lq ?tv22 ?tv24) (tf4 ?tv24 ?tv25) (tf2 ?tv24 ?tv25))))
  (declare-fun tf4 (Nat List) Bool)
  (=> tf4r0 (tf4 ?tv19 ?tv20) (tf5 ?tv19 ?tv20))
  (declare-fun tf7 (List) Bool)
  (=> tf7r0 (tf7 (nil ?tv27)) true)
  (=> tf7r1 (tf7 (cons ?tv28 ?tv29)) (tf4 ?tv28 ?tv29))
  (declare-fun tf6 (List) Bool)
  (=> tf6r0 (tf6 ?tv26) (tf7 ?tv26))
  (declare-fun is_unimodal (List) Bool)
  (=> is_unimodalr0 (is_unimodal ?tv11) (tf6 ?tv11))
  (declare-fun ite3 (Bool Nat Nat) Nat)
  (=> ite3r0 (ite3 true ?x ?y) ?x)
  (=> ite3r1 (ite3 false ?x ?y) ?y)
  (declare-fun max (Nat Nat) Nat)
  (=> maxr0 (max ?tv30 ?tv31) (ite3 (lq ?tv30 ?tv31) ?tv31 ?tv30))
  (declare-fun tf9 (List) Nat)
  (=> tf9r0 (tf9 (nil ?tv35)) zero)
  (=> tf9r1 (tf9 (cons ?tv36 ?tv37)) (max ?tv36 (tf8 ?tv37)))
  (declare-fun tf8 (List) Nat)
  (=> tf8r0 (tf8 ?tv33) (tf9 ?tv33))
  (declare-fun spec (List) Nat)
  (=> specr0 (spec ?tv32) (tf8 ?tv32))
  (declare-fun ite4 (Bool UList UList) UList)
  (=> ite4r0 (ite4 true ?x ?y) ?x)
  (=> ite4r1 (ite4 false ?x ?y) ?y)
  (declare-fun tf11 (UList) UList)
  (=> tf11r0 (tf11 (unil ?tv41)) (unil null))
  (=> tf11r1 (tf11 (uelt ?tv42)) (uelt ?tv42))
  (=> tf11r2 (tf11 (usplit ?tv43 ?tv44 ?tv45 ?tv46)) (ite4 (gq ?tv44 ?tv45) (usplit (tf10 ?tv43) ?tv44 ?tv45 ?tv46) (usplit ?tv43 ?tv44 ?tv45 (tf10 ?tv46))))
  (declare-fun tf10 (UList) UList)
  (=> tf10r0 (tf10 ?tv39) (tf11 ?tv39))
  (declare-fun target (UList) UList)
  (=> targetr0 (target ?tv38) (tf10 ?tv38))
  (declare-fun main (UList) Nat)
  (=> mainr0 (main ?tv47) (ite3 (is_unimodal (repr ?tv47)) (spec (repr (target ?tv47))) zero))
  (declare-fun tf13 (UList) Nat)
  (=> tf13r0 (tf13 (unil ?tv51)) zero)
  (=> tf13r1 (tf13 (uelt ?tv52)) ?tv52)
  (=> tf13r2 (tf13 (usplit ?tv53 ?tv54 ?tv55 ?tv56)) (ite3 (gq ?tv54 ?tv55) (max ?tv54 (tf12 ?tv53)) (ite3 (lq (tf12 ?tv56) ?tv55) ?tv55 (tf12 ?tv56))))
  (declare-fun tf12 (UList) Nat)
  (=> tf12r0 (tf12 ?tv49) (tf13 ?tv49))
  (declare-fun target_ (UList) Nat)
  (=> target_r0 (target_ ?tv48) (tf12 ?tv48))
  (declare-fun main_ (UList) Nat)
  (=> main_r0 (main_ ?tv57) (ite3 (is_unimodal (repr ?tv57)) (target_ ?tv57) zero))
  (prove (forall ((inp0 UList)) (= (main inp0) (main_ inp0))))
