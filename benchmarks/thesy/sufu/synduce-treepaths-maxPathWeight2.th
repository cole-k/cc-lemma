  (datatype Bool () ((true Bool) (false Bool)))
  (datatype Unit () ((null Unit)))
  (datatype Nat () ((zero Nat) (succ Nat Nat)))
  (datatype BTree () ((empty Unit BTree) (node Nat BTree BTree BTree)))
  (datatype Zipper () ((top Unit Zipper) (left Nat BTree Zipper Zipper) (right Nat BTree Zipper Zipper)))
  (declare-fun lq (Nat Nat) Bool)
  (=> lqr0 (lq zero (succ ?x)) true)
  (=> lqr1 (lq ?x zero) false)
  (=> lqr2 (lq (succ ?x) (succ ?y)) (lq ?x ?y))
  (declare-fun ite2 (Bool Nat Nat) Nat)
  (=> ite2r0 (ite2 true ?x ?y) ?x)
  (=> ite2r1 (ite2 false ?x ?y) ?y)
  (declare-fun max (Nat Nat) Nat)
  (=> maxr0 (max ?tv0 ?tv1) (ite2 (lq ?tv0 ?tv1) ?tv1 ?tv0))
  (declare-fun plus (Nat Nat) Nat)
  (=> plusr0 (plus zero ?x) ?x)
  (=> plusr1 (plus (succ ?x) ?y) (succ (plus ?x ?y)))
  (declare-fun tf1 (BTree) Nat)
  (=> tf1r0 (tf1 (empty ?tv5)) zero)
  (=> tf1r1 (tf1 (node ?tv6 ?tv7 ?tv8)) (plus ?tv6 (max (tf0 ?tv7) (tf0 ?tv8))))
  (declare-fun tf0 (BTree) Nat)
  (=> tf0r0 (tf0 ?tv3) (tf1 ?tv3))
  (declare-fun mpath (BTree) Nat)
  (=> mpathr0 (mpath ?tv2) (tf0 ?tv2))
  (declare-fun tf3 (Zipper) BTree)
  (=> tf3r0 (tf3 (top ?tv12)) (empty null))
  (=> tf3r1 (tf3 (left ?tv13 ?tv14 ?tv15)) (node ?tv13 ?tv14 (tf2 ?tv15)))
  (=> tf3r2 (tf3 (right ?tv16 ?tv17 ?tv18)) (node ?tv16 (tf2 ?tv18) ?tv17))
  (declare-fun tf2 (Zipper) BTree)
  (=> tf2r0 (tf2 ?tv10) (tf3 ?tv10))
  (declare-fun repr (Zipper) BTree)
  (=> reprr0 (repr ?tv9) (tf2 ?tv9))
  (declare-fun tf5 (BTree) BTree)
  (=> tf5r0 (tf5 (empty ?tv22)) (empty null))
  (=> tf5r1 (tf5 (node ?tv23 ?tv24 ?tv25)) (node ?tv23 (tf4 ?tv24) (tf4 ?tv25)))
  (declare-fun tf4 (BTree) BTree)
  (=> tf4r0 (tf4 ?tv20) (tf5 ?tv20))
  (declare-fun tree_rec (BTree) BTree)
  (=> tree_recr0 (tree_rec ?tv19) (tf4 ?tv19))
  (declare-fun tf7 (Zipper) Zipper)
  (=> tf7r0 (tf7 (top ?tv29)) (top null))
  (=> tf7r1 (tf7 (left ?tv30 ?tv31 ?tv32)) (left ?tv30 (tree_rec ?tv31) (tf6 ?tv32)))
  (=> tf7r2 (tf7 (right ?tv33 ?tv34 ?tv35)) (right ?tv33 (tree_rec ?tv34) (tf6 ?tv35)))
  (declare-fun tf6 (Zipper) Zipper)
  (=> tf6r0 (tf6 ?tv27) (tf7 ?tv27))
  (declare-fun zip_rec (Zipper) Zipper)
  (=> zip_recr0 (zip_rec ?tv26) (tf6 ?tv26))
  (declare-fun main (Zipper) Nat)
  (=> mainr0 (main ?tv36) (mpath (repr (zip_rec ?tv36))))
  (declare-fun tf9 (BTree) Nat)
  (=> tf9r0 (tf9 (empty ?tv40)) zero)
  (=> tf9r1 (tf9 (node ?tv41 ?tv42 ?tv43)) (plus ?tv41 (max (tf8 ?tv43) (tf8 ?tv42))))
  (declare-fun tf8 (BTree) Nat)
  (=> tf8r0 (tf8 ?tv38) (tf9 ?tv38))
  (declare-fun tree_rec_ (BTree) Nat)
  (=> tree_rec_r0 (tree_rec_ ?tv37) (tf8 ?tv37))
  (declare-fun tf11 (Zipper) Nat)
  (=> tf11r0 (tf11 (top ?tv47)) zero)
  (=> tf11r1 (tf11 (left ?tv48 ?tv49 ?tv50)) (plus ?tv48 (max (tf10 ?tv50) (tree_rec_ ?tv49))))
  (=> tf11r2 (tf11 (right ?tv51 ?tv52 ?tv53)) (plus ?tv51 (max (tf10 ?tv53) (tree_rec_ ?tv52))))
  (declare-fun tf10 (Zipper) Nat)
  (=> tf10r0 (tf10 ?tv45) (tf11 ?tv45))
  (declare-fun zip_rec_ (Zipper) Nat)
  (=> zip_rec_r0 (zip_rec_ ?tv44) (tf10 ?tv44))
  (declare-fun main_ (Zipper) Nat)
  (=> main_r0 (main_ ?tv54) (zip_rec_ ?tv54))
  (prove (forall ((inp0 Zipper)) (= (main inp0) (main_ inp0))))
