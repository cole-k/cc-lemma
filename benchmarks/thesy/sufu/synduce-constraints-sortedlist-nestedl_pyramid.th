  (datatype Bool () ((true Bool) (false Bool)))
  (datatype Nat () ((zero Nat) (succ Nat Nat)))
  (datatype List () ((elt Nat List) (cons Nat List List)))
  (datatype NList () ((line List NList) (ncons List NList NList)))
  (declare-fun lq (Nat Nat) Bool)
  (=> lqr0 (lq zero (succ ?x)) true)
  (=> lqr1 (lq ?x zero) false)
  (=> lqr2 (lq (succ ?x) (succ ?y)) (lq ?x ?y))
  (declare-fun ite2 (Bool Nat Nat) Nat)
  (=> ite2r0 (ite2 true ?x ?y) ?x)
  (=> ite2r1 (ite2 false ?x ?y) ?y)
  (declare-fun max (Nat Nat) Nat)
  (=> maxr0 (max ?tv0 ?tv1) (ite2 (lq ?tv0 ?tv1) ?tv1 ?tv0))
  (declare-fun tf1 (List) Nat)
  (=> tf1r0 (tf1 (elt ?tv5)) ?tv5)
  (=> tf1r1 (tf1 (cons ?tv6 ?tv7)) (max ?tv6 (tf0 ?tv7)))
  (declare-fun tf0 (List) Nat)
  (=> tf0r0 (tf0 ?tv3) (tf1 ?tv3))
  (declare-fun lmax (List) Nat)
  (=> lmaxr0 (lmax ?tv2) (tf0 ?tv2))
  (declare-fun min (Nat Nat) Nat)
  (=> minr0 (min ?tv8 ?tv9) (ite2 (lq ?tv8 ?tv9) ?tv8 ?tv9))
  (declare-fun tf3 (List) Nat)
  (=> tf3r0 (tf3 (elt ?tv13)) ?tv13)
  (=> tf3r1 (tf3 (cons ?tv14 ?tv15)) (min ?tv14 (tf2 ?tv15)))
  (declare-fun tf2 (List) Nat)
  (=> tf2r0 (tf2 ?tv11) (tf3 ?tv11))
  (declare-fun lmin (List) Nat)
  (=> lminr0 (lmin ?tv10) (tf2 ?tv10))
  (declare-fun leq (Nat Nat) Bool)
  (=> leqr0 (leq zero ?x) true)
  (=> leqr1 (leq (succ ?x) zero) false)
  (=> leqr2 (leq (succ ?x) (succ ?y)) (leq ?x ?y))
  (declare-fun and (Bool Bool) Bool)
  (=> andr0 (and false ?x) false)
  (=> andr1 (and ?x false) false)
  (=> andr2 (and true true) true)
  (declare-fun tf5 (Nat NList) Bool)
  (=> tf5r0 (tf5 ?tv20 (line ?tv21)) (leq ?tv20 (lmax ?tv21)))
  (=> tf5r1 (tf5 ?tv20 (ncons ?tv22 ?tv23)) (and (leq ?tv20 (lmax ?tv22)) (tf4 (lmax ?tv22) ?tv23)))
  (declare-fun tf4 (Nat NList) Bool)
  (=> tf4r0 (tf4 ?tv17 ?tv18) (tf5 ?tv17 ?tv18))
  (declare-fun tf7 (NList) Bool)
  (=> tf7r0 (tf7 (line ?tv25)) true)
  (=> tf7r1 (tf7 (ncons ?tv26 ?tv27)) (tf4 (lmax ?tv26) ?tv27))
  (declare-fun tf6 (NList) Bool)
  (=> tf6r0 (tf6 ?tv24) (tf7 ?tv24))
  (declare-fun is_sorted (NList) Bool)
  (=> is_sortedr0 (is_sorted ?tv16) (tf6 ?tv16))
  (datatype Tuple3 () ((makeTuple3 Nat Nat Tuple3)))
  (declare-fun fst_3 (Tuple3) Nat)
  (=> fst_3r0 (fst_3 (makeTuple3 ?x0 ?x1)) ?x0)
  (declare-fun snd_3 (Tuple3) Nat)
  (=> snd_3r0 (snd_3 (makeTuple3 ?x0 ?x1)) ?x1)
  (declare-fun tf9 (List) Tuple3)
  (=> tf9r0 (tf9 (elt ?tv31)) (makeTuple3 ?tv31 ?tv31))
  (=> tf9r1 (tf9 (cons ?tv32 ?tv33)) (makeTuple3 (min (fst_3 (tf8 ?tv33)) ?tv32) (max (snd_3 (tf8 ?tv33)) ?tv32)))
  (declare-fun tf8 (List) Tuple3)
  (=> tf8r0 (tf8 ?tv29) (tf9 ?tv29))
  (declare-fun interval (List) Tuple3)
  (=> intervalr0 (interval ?tv28) (tf8 ?tv28))
  (datatype Tuple4 () ((makeTuple4 Nat Nat Bool Tuple4)))
  (declare-fun fst_4 (Tuple4) Nat)
  (=> fst_4r0 (fst_4 (makeTuple4 ?x0 ?x1 ?x2)) ?x0)
  (declare-fun snd_4 (Tuple4) Nat)
  (=> snd_4r0 (snd_4 (makeTuple4 ?x0 ?x1 ?x2)) ?x1)
  (declare-fun third_4 (Tuple4) Bool)
  (=> third_4r0 (third_4 (makeTuple4 ?x0 ?x1 ?x2)) ?x2)
  (declare-fun geq (Nat Nat) Bool)
  (=> geqr0 (geq zero (succ ?x)) false)
  (=> geqr1 (geq ?x zero) true)
  (=> geqr2 (geq (succ ?x) (succ ?y)) (geq ?x ?y))
  (declare-fun tf11 (NList) Tuple4)
  (=> tf11r0 (tf11 (line ?tv37)) (makeTuple4 (fst_3 (interval ?tv37)) (snd_3 (interval ?tv37)) true))
  (=> tf11r1 (tf11 (ncons ?tv38 ?tv39)) (makeTuple4 (min (fst_3 (interval ?tv38)) (fst_4 (tf10 ?tv39))) (max (snd_3 (interval ?tv38)) (snd_4 (tf10 ?tv39))) (and (third_4 (tf10 ?tv39)) (and (leq (fst_4 (tf10 ?tv39)) (fst_3 (interval ?tv38))) (geq (snd_4 (tf10 ?tv39)) (snd_3 (interval ?tv38)))))))
  (declare-fun tf10 (NList) Tuple4)
  (=> tf10r0 (tf10 ?tv35) (tf11 ?tv35))
  (declare-fun spec (NList) Bool)
  (=> specr0 (spec ?tv34) (third_4 (tf10 ?tv34)))
  (declare-fun tf13 (NList NList) NList)
  (=> tf13r0 (tf13 ?tv43 (line ?tv44)) ?tv43)
  (=> tf13r1 (tf13 ?tv43 (ncons ?tv45 ?tv46)) (ncons ?tv45 (tf12 ?tv46)))
  (declare-fun tf12 (NList) NList)
  (=> tf12r0 (tf12 ?tv41) (tf13 ?tv41 ?tv41))
  (declare-fun target (NList) NList)
  (=> targetr0 (target ?tv40) (tf12 ?tv40))
  (declare-fun ite5 (Bool Bool) Bool)
  (=> ite5r0 (ite5 true ?x) ?x)
  (=> ite5r1 (ite5 false ?x) false)
  (declare-fun main (NList) Bool)
  (=> mainr0 (main ?tv47) (ite5 (is_sorted ?tv47) (spec (target ?tv47))))
  (datatype Tuple6 () ((makeTuple6 Bool Nat Tuple6)))
  (declare-fun fst_6 (Tuple6) Bool)
  (=> fst_6r0 (fst_6 (makeTuple6 ?x0 ?x1)) ?x0)
  (declare-fun snd_6 (Tuple6) Nat)
  (=> snd_6r0 (snd_6 (makeTuple6 ?x0 ?x1)) ?x1)
  (declare-fun tf15 (NList) Tuple6)
  (=> tf15r0 (tf15 (line ?tv51)) (makeTuple6 true (fst_3 (interval ?tv51))))
  (=> tf15r1 (tf15 (ncons ?tv52 ?tv53)) (makeTuple6 (and (fst_6 (tf14 ?tv53)) (leq (snd_6 (tf14 ?tv53)) (lmin ?tv52))) (snd_6 (tf14 ?tv53))))
  (declare-fun tf14 (NList) Tuple6)
  (=> tf14r0 (tf14 ?tv49) (tf15 ?tv49))
  (declare-fun target_ (NList) Tuple6)
  (=> target_r0 (target_ ?tv48) (tf14 ?tv48))
  (declare-fun main_ (NList) Bool)
  (=> main_r0 (main_ ?tv54) (ite5 (is_sorted ?tv54) (fst_6 (target_ ?tv54))))
  (prove (forall ((inp0 NList)) (= (main inp0) (main_ inp0))))
