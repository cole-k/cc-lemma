  (datatype Bool () ((true Bool) (false Bool)))
  (datatype Nat () ((zero Nat) (succ Nat Nat)))
  (datatype Tree () ((leaf Nat Tree) (node Nat Tree Tree Tree)))
  (datatype TreeMemo () ((mleaf Nat TreeMemo) (mnode Nat Nat TreeMemo TreeMemo TreeMemo)))
  (declare-fun tf0 (TreeMemo) Nat)
  (=> tf0r0 (tf0 (mleaf ?tv1)) (succ zero))
  (=> tf0r1 (tf0 (mnode ?tv2 ?tv3 ?tv4 ?tv5)) ?tv2)
  (declare-fun memo (TreeMemo) Nat)
  (=> memor0 (memo ?tv0) (tf0 ?tv0))
  (declare-fun and (Bool Bool) Bool)
  (=> andr0 (and false ?x) false)
  (=> andr1 (and ?x false) false)
  (=> andr2 (and true true) true)
  (declare-fun nat_eq (Nat Nat) Bool)
  (=> nat_eqr0 (nat_eq zero zero) true)
  (=> nat_eqr1 (nat_eq zero (succ ?x)) false)
  (=> nat_eqr2 (nat_eq (succ ?x) zero) false)
  (=> nat_eqr3 (nat_eq (succ ?x) (succ ?y)) (nat_eq ?x ?y))
  (declare-fun plus (Nat Nat) Nat)
  (=> plusr0 (plus zero ?x) ?x)
  (=> plusr1 (plus (succ ?x) ?y) (succ (plus ?x ?y)))
  (declare-fun tf2 (TreeMemo) Bool)
  (=> tf2r0 (tf2 (mleaf ?tv9)) true)
  (=> tf2r1 (tf2 (mnode ?tv10 ?tv11 ?tv12 ?tv13)) (and (nat_eq ?tv10 (plus (succ zero) (plus (memo ?tv12) (memo ?tv13)))) (and (tf1 ?tv12) (tf1 ?tv13))))
  (declare-fun tf1 (TreeMemo) Bool)
  (=> tf1r0 (tf1 ?tv7) (tf2 ?tv7))
  (declare-fun is_memo (TreeMemo) Bool)
  (=> is_memor0 (is_memo ?tv6) (tf1 ?tv6))
  (declare-fun tf4 (TreeMemo) Tree)
  (=> tf4r0 (tf4 (mleaf ?tv17)) (leaf ?tv17))
  (=> tf4r1 (tf4 (mnode ?tv18 ?tv19 ?tv20 ?tv21)) (node ?tv19 (tf3 ?tv20) (tf3 ?tv21)))
  (declare-fun tf3 (TreeMemo) Tree)
  (=> tf3r0 (tf3 ?tv15) (tf4 ?tv15))
  (declare-fun repr (TreeMemo) Tree)
  (=> reprr0 (repr ?tv14) (tf3 ?tv14))
  (declare-fun tf6 (TreeMemo) TreeMemo)
  (=> tf6r0 (tf6 (mleaf ?tv24)) (mleaf ?tv24))
  (=> tf6r1 (tf6 (mnode ?tv25 ?tv26 ?tv27 ?tv28)) (mnode ?tv25 ?tv26 ?tv27 ?tv28))
  (declare-fun tf5 (TreeMemo) TreeMemo)
  (=> tf5r0 (tf5 ?tv23) (tf6 ?tv23))
  (declare-fun target (TreeMemo) TreeMemo)
  (=> targetr0 (target ?tv22) (tf5 ?tv22))
  (declare-fun tf8 (Tree) Nat)
  (=> tf8r0 (tf8 (leaf ?tv32)) (succ zero))
  (=> tf8r1 (tf8 (node ?tv33 ?tv34 ?tv35)) (plus (succ zero) (plus (tf7 ?tv34) (tf7 ?tv35))))
  (declare-fun tf7 (Tree) Nat)
  (=> tf7r0 (tf7 ?tv30) (tf8 ?tv30))
  (declare-fun spec (Tree) Nat)
  (=> specr0 (spec ?tv29) (tf7 ?tv29))
  (declare-fun ite2 (Bool Nat) Nat)
  (=> ite2r0 (ite2 true ?x) ?x)
  (=> ite2r1 (ite2 false ?x) zero)
  (declare-fun main (TreeMemo) Nat)
  (=> mainr0 (main ?tv36) (ite2 (is_memo ?tv36) (spec (repr (target ?tv36)))))
  (declare-fun main_ (TreeMemo) Nat)
  (=> main_r0 (main_ ?tv37) (ite2 (is_memo ?tv37) (memo ?tv37)))
  (prove (forall ((inp0 TreeMemo)) (= (main inp0) (main_ inp0))))
