(datatype Nat () ((succ Nat Nat) (zero Nat)))
(declare-fun plus (Nat Nat) Nat)
(declare-fun mult (Nat Nat) Nat)
(declare-fun leq (Nat Nat) Bool)
(=> rule0 (leq ?__x0 ?__y1) (or (= ?__x0 ?__y1) (less ?__x0 ?__y1)))
(=> rule1 (or (= ?__x0 ?__y1) (less ?__x0 ?__y1)) (leq ?__x0 ?__y1))
(=> rule2 (plus zero ?n) ?n)
(=> rule3 (plus (succ ?n) ?m) (succ (plus ?n ?m)))
(=> rule4 (succ (plus ?n ?m)) (plus (succ ?n) ?m))
(=> rule5 (mult zero ?n) zero)
(=> rule6 (mult (succ ?n) ?m) (plus (mult ?n ?m) ?m))
(=> rule7 (plus (mult ?n ?m) ?m) (mult (succ ?n) ?m))
(prove (forall ((y Nat)(z Nat)(x Nat)) (= (mult (mult x y) z) (mult x (mult y z)))))
