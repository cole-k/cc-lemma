(datatype Nat () ((succ Nat Nat) (zero Nat)))
(declare-fun plus (Nat Nat) Nat)
(declare-fun half (Nat) Nat)
(declare-fun leq (Nat Nat) Bool)
(=> rule0 (leq ?__x0 ?__y1) (or (= ?__x0 ?__y1) (less ?__x0 ?__y1)))
(=> rule1 (or (= ?__x0 ?__y1) (less ?__x0 ?__y1)) (leq ?__x0 ?__y1))
(=> rule2 (plus zero ?n) ?n)
(=> rule3 (plus (succ ?n) ?m) (succ (plus ?n ?m)))
(=> rule4 (succ (plus ?n ?m)) (plus (succ ?n) ?m))
(=> rule5 (half zero) zero)
(=> rule6 zero (half zero))
(=> rule7 (half (succ zero)) zero)
(=> rule8 zero (half (succ zero)))
(=> rule9 (half (succ (succ ?n))) (succ (half ?n)))
(=> rule10 (succ (half ?n)) (half (succ (succ ?n))))
(prove (forall ((x Nat)) (= (half (plus x x)) x)))
