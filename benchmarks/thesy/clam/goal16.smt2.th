(datatype Nat () ((succ Nat Nat) (zero Nat)))
(declare-fun plus (Nat Nat) Nat)
(declare-fun even (Nat) Bool)
(declare-fun leq (Nat Nat) Bool)
(=> rule0 (leq ?__x0 ?__y1) (or (= ?__x0 ?__y1) (less ?__x0 ?__y1)))
(=> rule1 (or (= ?__x0 ?__y1) (less ?__x0 ?__y1)) (leq ?__x0 ?__y1))
(=> rule2 (plus zero ?n) ?n)
(=> rule3 (plus (succ ?n) ?m) (succ (plus ?n ?m)))
(=> rule4 (succ (plus ?n ?m)) (plus (succ ?n) ?m))
(=> rule5 (even zero) true)
(=> rule6 true (even zero))
(=> rule7 (even (succ ?n)) (not (even ?n)))
(=> rule8 (not (even ?n)) (even (succ ?n)))
(prove (forall ((x Nat)) (= (even (plus x x)) true)))
