  (declare-datatypes () ((MyBool (MyTrue) (MyFalse))))
  (declare-datatypes () ((Unit (Null))))
  (declare-datatypes () ((Nat (Zero) (Succ (proj_Succ_0 Nat)))))
  (declare-datatypes () ((List (Nil (proj_Nil_0 Unit)) (Cons (proj_Cons_0 Nat) (proj_Cons_1 List)))))
  (declare-fun plus (Nat Nat) Nat)
  (declare-fun tf1 (List) Nat)
  (declare-fun tf0 (List) Nat)
  (declare-fun spec (List) Nat)
  (declare-fun tf3 (Nat List) List)
  (declare-fun tf2 (List Nat) List)
  (declare-fun snoc (List Nat) List)
  (declare-fun tf5 (List List) List)
  (declare-fun tf4 (List List) List)
  (declare-fun repr (List) List)
  (declare-fun main (List) Nat)
  (declare-fun tf7 (Nat List) Nat)
  (declare-fun tf6 (Nat List) Nat)
  (declare-fun reprNew (List) Nat)
  (declare-fun mainNew (List) Nat)
  (assert (forall ((x Nat)) (= (plus Zero x) x)))
  (assert (forall ((y Nat) (x Nat)) (= (plus (Succ x) y) (Succ (plus x y)))))
  (assert (forall ((tv3 Unit)) (= (tf1 (Nil tv3)) Zero)))
  (assert (forall ((tv5 List) (tv4 Nat)) (= (tf1 (Cons tv4 tv5)) (plus tv4 (tf0 tv5)))))
  (assert (forall ((tv1 List)) (= (tf0 tv1) (tf1 tv1))))
  (assert (forall ((tv0 List)) (= (spec tv0) (tf0 tv0))))
  (assert (forall ((tv12 Unit) (tv11 Nat)) (= (tf3 tv11 (Nil tv12)) (Cons tv11 (Nil Null)))))
  (assert (forall ((tv14 List) (tv13 Nat) (tv11 Nat)) (= (tf3 tv11 (Cons tv13 tv14)) (Cons tv13 (tf2 tv14 tv11)))))
  (assert (forall ((tv9 Nat) (tv8 List)) (= (tf2 tv8 tv9) (tf3 tv9 tv8))))
  (assert (forall ((tv7 Nat) (tv6 List)) (= (snoc tv6 tv7) (tf2 tv6 tv7))))
  (assert (forall ((tv20 Unit) (tv19 List)) (= (tf5 tv19 (Nil tv20)) tv19)))
  (assert (forall ((tv22 List) (tv21 Nat) (tv19 List)) (= (tf5 tv19 (Cons tv21 tv22)) (tf4 (snoc tv19 tv21) tv22))))
  (assert (forall ((tv17 List) (tv16 List)) (= (tf4 tv16 tv17) (tf5 tv16 tv17))))
  (assert (forall ((tv15 List)) (= (repr tv15) (tf4 (Nil Null) tv15))))
  (assert (forall ((tv23 List)) (= (main tv23) (spec (repr tv23)))))
  (assert (forall ((tv29 Unit) (tv28 Nat)) (= (tf7 tv28 (Nil tv29)) tv28)))
  (assert (forall ((tv31 List) (tv30 Nat) (tv28 Nat)) (= (tf7 tv28 (Cons tv30 tv31)) (tf6 (plus tv28 tv30) tv31))))
  (assert (forall ((tv26 List) (tv25 Nat)) (= (tf6 tv25 tv26) (tf7 tv25 tv26))))
  (assert (forall ((tv24 List)) (= (reprNew tv24) (tf6 Zero tv24))))
  (assert (forall ((tv32 List)) (= (mainNew tv32) (reprNew tv32))))
  (assert (not (forall ((inp0 List)) (= (main inp0) (mainNew inp0)))))
  (check-sat)
